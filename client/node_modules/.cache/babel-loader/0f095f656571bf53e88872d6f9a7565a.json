{"ast":null,"code":"import { Konva } from './Global.js';\nconst Captures = new Map();\nconst SUPPORT_POINTER_EVENTS = Konva._global['PointerEvent'] !== undefined;\nexport function getCapturedShape(pointerId) {\n  return Captures.get(pointerId);\n}\nexport function createEvent(evt) {\n  return {\n    evt,\n    pointerId: evt.pointerId\n  };\n}\nexport function hasPointerCapture(pointerId, shape) {\n  return Captures.get(pointerId) === shape;\n}\nexport function setPointerCapture(pointerId, shape) {\n  releaseCapture(pointerId);\n  const stage = shape.getStage();\n  if (!stage) return;\n  Captures.set(pointerId, shape);\n\n  if (SUPPORT_POINTER_EVENTS) {\n    shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\n  }\n}\nexport function releaseCapture(pointerId, target) {\n  const shape = Captures.get(pointerId);\n  if (!shape) return;\n  const stage = shape.getStage();\n\n  if (stage && stage.content) {}\n\n  Captures.delete(pointerId);\n\n  if (SUPPORT_POINTER_EVENTS) {\n    shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\n  }\n}","map":{"version":3,"sources":["/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/node_modules/konva/lib/PointerEvents.js"],"names":["Konva","Captures","Map","SUPPORT_POINTER_EVENTS","_global","undefined","getCapturedShape","pointerId","get","createEvent","evt","hasPointerCapture","shape","setPointerCapture","releaseCapture","stage","getStage","set","_fire","PointerEvent","target","content","delete"],"mappings":"AAAA,SAASA,KAAT,QAAsB,aAAtB;AACA,MAAMC,QAAQ,GAAG,IAAIC,GAAJ,EAAjB;AACA,MAAMC,sBAAsB,GAAGH,KAAK,CAACI,OAAN,CAAc,cAAd,MAAkCC,SAAjE;AACA,OAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AACxC,SAAON,QAAQ,CAACO,GAAT,CAAaD,SAAb,CAAP;AACH;AACD,OAAO,SAASE,WAAT,CAAqBC,GAArB,EAA0B;AAC7B,SAAO;AACHA,IAAAA,GADG;AAEHH,IAAAA,SAAS,EAAEG,GAAG,CAACH;AAFZ,GAAP;AAIH;AACD,OAAO,SAASI,iBAAT,CAA2BJ,SAA3B,EAAsCK,KAAtC,EAA6C;AAChD,SAAOX,QAAQ,CAACO,GAAT,CAAaD,SAAb,MAA4BK,KAAnC;AACH;AACD,OAAO,SAASC,iBAAT,CAA2BN,SAA3B,EAAsCK,KAAtC,EAA6C;AAChDE,EAAAA,cAAc,CAACP,SAAD,CAAd;AACA,QAAMQ,KAAK,GAAGH,KAAK,CAACI,QAAN,EAAd;AACA,MAAI,CAACD,KAAL,EACI;AACJd,EAAAA,QAAQ,CAACgB,GAAT,CAAaV,SAAb,EAAwBK,KAAxB;;AACA,MAAIT,sBAAJ,EAA4B;AACxBS,IAAAA,KAAK,CAACM,KAAN,CAAY,mBAAZ,EAAiCT,WAAW,CAAC,IAAIU,YAAJ,CAAiB,mBAAjB,CAAD,CAA5C;AACH;AACJ;AACD,OAAO,SAASL,cAAT,CAAwBP,SAAxB,EAAmCa,MAAnC,EAA2C;AAC9C,QAAMR,KAAK,GAAGX,QAAQ,CAACO,GAAT,CAAaD,SAAb,CAAd;AACA,MAAI,CAACK,KAAL,EACI;AACJ,QAAMG,KAAK,GAAGH,KAAK,CAACI,QAAN,EAAd;;AACA,MAAID,KAAK,IAAIA,KAAK,CAACM,OAAnB,EAA4B,CAC3B;;AACDpB,EAAAA,QAAQ,CAACqB,MAAT,CAAgBf,SAAhB;;AACA,MAAIJ,sBAAJ,EAA4B;AACxBS,IAAAA,KAAK,CAACM,KAAN,CAAY,oBAAZ,EAAkCT,WAAW,CAAC,IAAIU,YAAJ,CAAiB,oBAAjB,CAAD,CAA7C;AACH;AACJ","sourcesContent":["import { Konva } from './Global.js';\nconst Captures = new Map();\nconst SUPPORT_POINTER_EVENTS = Konva._global['PointerEvent'] !== undefined;\nexport function getCapturedShape(pointerId) {\n    return Captures.get(pointerId);\n}\nexport function createEvent(evt) {\n    return {\n        evt,\n        pointerId: evt.pointerId,\n    };\n}\nexport function hasPointerCapture(pointerId, shape) {\n    return Captures.get(pointerId) === shape;\n}\nexport function setPointerCapture(pointerId, shape) {\n    releaseCapture(pointerId);\n    const stage = shape.getStage();\n    if (!stage)\n        return;\n    Captures.set(pointerId, shape);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\n    }\n}\nexport function releaseCapture(pointerId, target) {\n    const shape = Captures.get(pointerId);\n    if (!shape)\n        return;\n    const stage = shape.getStage();\n    if (stage && stage.content) {\n    }\n    Captures.delete(pointerId);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}