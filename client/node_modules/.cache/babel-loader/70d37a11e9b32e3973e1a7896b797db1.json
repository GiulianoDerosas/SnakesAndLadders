{"ast":null,"code":"var _jsxFileName = \"/Users/giulianoderosas/codeclan_work/week_08/SnakesAndLadders/client/src/components/GameBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameBoard = () => {\n  _s();\n\n  const width = 500;\n  const height = 500;\n  const numCol = 10;\n  const numRow = 10;\n  const tileSize = 50;\n  let yAxis = (numRow - 1) * tileSize;\n  let xAxis = 0;\n  let board = [];\n  let direction = 1;\n  const canvas = useRef();\n  useEffect(() => {});\n\n  for (let index = 0; index < numRow * numRow; index++) {\n    // add each tile to the array\n    board.push({\n      xAxis,\n      yAxis,\n      tileSize,\n      index\n    });\n    xAxis = xAxis + tileSize * direction; // reverse direction after 10th tile and move up 1 tile\n\n    if (xAxis >= width || xAxis <= -tileSize) {\n      direction *= -1;\n      xAxis += tileSize * direction;\n      yAxis -= tileSize;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    children: [\"ref=\", canvas]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GameBoard, \"Iosu+jEjScFAX5hfSp9z4J61DK4=\");\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/Users/giulianoderosas/codeclan_work/week_08/SnakesAndLadders/client/src/components/GameBoard.js"],"names":["React","useEffect","useRef","GameBoard","width","height","numCol","numRow","tileSize","yAxis","xAxis","board","direction","canvas","index","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAMC,KAAK,GAAG,GAAd;AACA,QAAMC,MAAM,GAAG,GAAf;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACA,MAAIC,KAAK,GAAG,CAACF,MAAM,GAAE,CAAT,IAAeC,QAA3B;AACA,MAAIE,KAAK,GAAG,CAAZ;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,QAAMC,MAAM,GAAGX,MAAM,EAArB;AAGAD,EAAAA,SAAS,CAAC,MAAK,CACd,CADQ,CAAT;;AAEA,OAAK,IAAIa,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGP,MAAM,GAAGA,MAArC,EAA6CO,KAAK,EAAlD,EAAsD;AAClD;AACAH,IAAAA,KAAK,CAACI,IAAN,CAAW;AAACL,MAAAA,KAAD;AAAQD,MAAAA,KAAR;AAAeD,MAAAA,QAAf;AAAyBM,MAAAA;AAAzB,KAAX;AACAJ,IAAAA,KAAK,GAAGA,KAAK,GAAGF,QAAQ,GAAGI,SAA3B,CAHkD,CAIlD;;AACA,QAAIF,KAAK,IAAIN,KAAT,IAAkBM,KAAK,IAAI,CAACF,QAAhC,EAA0C;AACtCI,MAAAA,SAAS,IAAG,CAAC,CAAb;AACAF,MAAAA,KAAK,IAAIF,QAAQ,GAAGI,SAApB;AACAH,MAAAA,KAAK,IAAID,QAAT;AACH;AACJ;;AAGD,sBACI;AAAA,uBACSK,MADT;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlCD;;GAAMV,S;;KAAAA,S;AAmCN,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useRef} from 'react'\n\nconst GameBoard = () => {\n\n    const width = 500;\n    const height = 500;\n    const numCol = 10;\n    const numRow = 10;\n    const tileSize = 50;\n    let yAxis = (numRow -1 ) * tileSize;\n    let xAxis = 0;\n    let board = [];\n    let direction = 1;\n    const canvas = useRef();\n\n\n    useEffect(()=> {\n    })\n    for (let index = 0; index < numRow * numRow; index++) {\n        // add each tile to the array\n        board.push({xAxis, yAxis, tileSize, index});\n        xAxis = xAxis + tileSize * direction;\n        // reverse direction after 10th tile and move up 1 tile\n        if (xAxis >= width || xAxis <= -tileSize) {\n            direction*= -1;\n            xAxis += tileSize * direction;\n            yAxis -= tileSize\n        }\n    }\n\n\n    return (\n        <canvas>\n            ref={canvas}\n        </canvas>\n    )\n}\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}