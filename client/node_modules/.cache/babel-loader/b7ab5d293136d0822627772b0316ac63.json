{"ast":null,"code":"import { useEffect, useRef } from \"react\";\nimport Canvas from \"./Canvas\";\nconst width = 500;\nconst height = 500;\nconst numCol = 10;\nconst numRow = 10;\nconst tileSize = 50;\nlet yAxis = (numRow - 1) * tileSize;\nlet xAxis = 0;\nlet board = [];\nlet direction = 1;\nconst canvasRef = useRef([]);\n\nconst GameBoard = ctx => {\n  for (let index = 0; index < numRow * numRow; index++) {\n    // add each tile to the array\n    board.push({\n      xAxis,\n      yAxis,\n      tileSize,\n      index\n    });\n    xAxis = xAxis + tileSize * direction; // reverse direction after 10th tile and move up 1 tile\n\n    if (xAxis >= width || xAxis <= -tileSize) {\n      direction *= -1;\n      xAxis += tileSize * direction;\n      yAxis -= tileSize;\n    }\n\n    board.forEach(tile => {\n      ctx.fillStyle = '#ebebeb';\n      ctx.beginPath();\n      ctx.strokeRect(tile.xAxis, tile.yAxis, tile.tileSize, tile.tileSize);\n      ctx.fill();\n      ctx.font = \"20px Arial\";\n      ctx.strokeText(`${tile.index + 1}`, tile.xAxis, tile.yAxis + 50); // if (tile.occupied) \n    });\n  }\n};\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/src/components/GameBoard.js"],"names":["useEffect","useRef","Canvas","width","height","numCol","numRow","tileSize","yAxis","xAxis","board","direction","canvasRef","GameBoard","ctx","index","push","forEach","tile","fillStyle","beginPath","strokeRect","fill","font","strokeText"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,MAAnB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,KAAK,GAAG,GAAd;AACI,MAAMC,MAAM,GAAG,GAAf;AACA,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,QAAQ,GAAG,EAAjB;AACA,IAAIC,KAAK,GAAG,CAACF,MAAM,GAAG,CAAV,IAAeC,QAA3B;AACA,IAAIE,KAAK,GAAG,CAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA,MAAMC,SAAS,GAAGX,MAAM,CAAC,EAAD,CAAxB;;AAEA,MAAMY,SAAS,GAAGC,GAAG,IAAI;AACrB,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGT,MAAM,GAAGA,MAArC,EAA6CS,KAAK,EAAlD,EAAsD;AAClD;AACAL,IAAAA,KAAK,CAACM,IAAN,CAAW;AAAEP,MAAAA,KAAF;AAASD,MAAAA,KAAT;AAAgBD,MAAAA,QAAhB;AAA0BQ,MAAAA;AAA1B,KAAX;AACAN,IAAAA,KAAK,GAAGA,KAAK,GAAGF,QAAQ,GAAGI,SAA3B,CAHkD,CAIlD;;AACA,QAAIF,KAAK,IAAIN,KAAT,IAAkBM,KAAK,IAAI,CAACF,QAAhC,EAA0C;AACtCI,MAAAA,SAAS,IAAI,CAAC,CAAd;AACAF,MAAAA,KAAK,IAAIF,QAAQ,GAAGI,SAApB;AACAH,MAAAA,KAAK,IAAID,QAAT;AACH;;AAEDG,IAAAA,KAAK,CAACO,OAAN,CAAcC,IAAI,IAAI;AAClBJ,MAAAA,GAAG,CAACK,SAAJ,GAAgB,SAAhB;AACAL,MAAAA,GAAG,CAACM,SAAJ;AACAN,MAAAA,GAAG,CAACO,UAAJ,CAAeH,IAAI,CAACT,KAApB,EAA2BS,IAAI,CAACV,KAAhC,EAAuCU,IAAI,CAACX,QAA5C,EAAsDW,IAAI,CAACX,QAA3D;AACAO,MAAAA,GAAG,CAACQ,IAAJ;AACAR,MAAAA,GAAG,CAACS,IAAJ,GAAW,YAAX;AACAT,MAAAA,GAAG,CAACU,UAAJ,CAAgB,GAAEN,IAAI,CAACH,KAAL,GAAa,CAAE,EAAjC,EAAoCG,IAAI,CAACT,KAAzC,EAAgDS,IAAI,CAACV,KAAL,GAAa,EAA7D,EANkB,CAOlB;AACH,KARD;AAWH;AACJ,CAxBD;;KAAMK,S;AA0BV,eAAeA,SAAf","sourcesContent":["import {useEffect, useRef} from \"react\"\nimport Canvas from \"./Canvas\"\n\nconst width = 500;\n    const height = 500;\n    const numCol = 10;\n    const numRow = 10;\n    const tileSize = 50;\n    let yAxis = (numRow - 1) * tileSize;\n    let xAxis = 0;\n    let board = [];\n    let direction = 1;\n    const canvasRef = useRef([])\n\n    const GameBoard = ctx => {\n        for (let index = 0; index < numRow * numRow; index++) {\n            // add each tile to the array\n            board.push({ xAxis, yAxis, tileSize, index });\n            xAxis = xAxis + tileSize * direction;\n            // reverse direction after 10th tile and move up 1 tile\n            if (xAxis >= width || xAxis <= -tileSize) {\n                direction *= -1;\n                xAxis += tileSize * direction;\n                yAxis -= tileSize\n            }\n\n            board.forEach(tile => {\n                ctx.fillStyle = '#ebebeb'\n                ctx.beginPath()\n                ctx.strokeRect(tile.xAxis, tile.yAxis, tile.tileSize, tile.tileSize)\n                ctx.fill()\n                ctx.font = \"20px Arial\";\n                ctx.strokeText(`${tile.index + 1}`, tile.xAxis, tile.yAxis + 50);\n                // if (tile.occupied) \n            })\n\n            \n        }\n    }\n\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}