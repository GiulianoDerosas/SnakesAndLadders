{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\";\nimport Canvas from \"./Canvas\";\n\nconst GameBoard = ctx => {\n  _s();\n\n  const width = 500;\n  const height = 500;\n  const numCol = 10;\n  const numRow = 10;\n  const tileSize = 50;\n  let yAxis = (numRow - 1) * tileSize;\n  let xAxis = 0;\n  let board = [];\n  let direction = 1;\n  const canvasRef = useRef([]);\n\n  for (let index = 0; index < numRow * numRow; index++) {\n    // add each tile to the array\n    board.push({\n      xAxis,\n      yAxis,\n      tileSize,\n      index\n    });\n    xAxis = xAxis + tileSize * direction; // reverse direction after 10th tile and move up 1 tile\n\n    if (xAxis >= width || xAxis <= -tileSize) {\n      direction *= -1;\n      xAxis += tileSize * direction;\n      yAxis -= tileSize;\n    }\n\n    board.forEach(tile => {\n      ctx.fillStyle = '#ebebeb';\n      ctx.beginPath();\n      ctx.strokeRect(tile.xAxis, tile.yAxis, tile.tileSize, tile.tileSize);\n      ctx.fill();\n      ctx.font = \"20px Arial\";\n      ctx.strokeText(`${tile.index + 1}`, tile.xAxis, tile.yAxis + 50); // if (tile.occupied) \n    });\n  }\n};\n\n_s(GameBoard, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/src/components/GameBoard.js"],"names":["useEffect","useRef","Canvas","GameBoard","ctx","width","height","numCol","numRow","tileSize","yAxis","xAxis","board","direction","canvasRef","index","push","forEach","tile","fillStyle","beginPath","strokeRect","fill","font","strokeText"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,MAAnB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAII,MAAMC,SAAS,GAAGC,GAAG,IAAI;AAAA;;AACrB,QAAMC,KAAK,GAAG,GAAd;AACJ,QAAMC,MAAM,GAAG,GAAf;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACA,MAAIC,KAAK,GAAG,CAACF,MAAM,GAAG,CAAV,IAAeC,QAA3B;AACA,MAAIE,KAAK,GAAG,CAAZ;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,QAAMC,SAAS,GAAGb,MAAM,CAAC,EAAD,CAAxB;;AACI,OAAK,IAAIc,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGP,MAAM,GAAGA,MAArC,EAA6CO,KAAK,EAAlD,EAAsD;AAClD;AACAH,IAAAA,KAAK,CAACI,IAAN,CAAW;AAAEL,MAAAA,KAAF;AAASD,MAAAA,KAAT;AAAgBD,MAAAA,QAAhB;AAA0BM,MAAAA;AAA1B,KAAX;AACAJ,IAAAA,KAAK,GAAGA,KAAK,GAAGF,QAAQ,GAAGI,SAA3B,CAHkD,CAIlD;;AACA,QAAIF,KAAK,IAAIN,KAAT,IAAkBM,KAAK,IAAI,CAACF,QAAhC,EAA0C;AACtCI,MAAAA,SAAS,IAAI,CAAC,CAAd;AACAF,MAAAA,KAAK,IAAIF,QAAQ,GAAGI,SAApB;AACAH,MAAAA,KAAK,IAAID,QAAT;AACH;;AAEDG,IAAAA,KAAK,CAACK,OAAN,CAAcC,IAAI,IAAI;AAClBd,MAAAA,GAAG,CAACe,SAAJ,GAAgB,SAAhB;AACAf,MAAAA,GAAG,CAACgB,SAAJ;AACAhB,MAAAA,GAAG,CAACiB,UAAJ,CAAeH,IAAI,CAACP,KAApB,EAA2BO,IAAI,CAACR,KAAhC,EAAuCQ,IAAI,CAACT,QAA5C,EAAsDS,IAAI,CAACT,QAA3D;AACAL,MAAAA,GAAG,CAACkB,IAAJ;AACAlB,MAAAA,GAAG,CAACmB,IAAJ,GAAW,YAAX;AACAnB,MAAAA,GAAG,CAACoB,UAAJ,CAAgB,GAAEN,IAAI,CAACH,KAAL,GAAa,CAAE,EAAjC,EAAoCG,IAAI,CAACP,KAAzC,EAAgDO,IAAI,CAACR,KAAL,GAAa,EAA7D,EANkB,CAOlB;AACH,KARD;AAWH;AACJ,CAlCD;;GAAMP,S;;KAAAA,S;AAoCV,eAAeA,SAAf","sourcesContent":["import {useEffect, useRef} from \"react\"\nimport Canvas from \"./Canvas\"\n\n\n\n    const GameBoard = ctx => {\n        const width = 500;\n    const height = 500;\n    const numCol = 10;\n    const numRow = 10;\n    const tileSize = 50;\n    let yAxis = (numRow - 1) * tileSize;\n    let xAxis = 0;\n    let board = [];\n    let direction = 1;\n    const canvasRef = useRef([])\n        for (let index = 0; index < numRow * numRow; index++) {\n            // add each tile to the array\n            board.push({ xAxis, yAxis, tileSize, index });\n            xAxis = xAxis + tileSize * direction;\n            // reverse direction after 10th tile and move up 1 tile\n            if (xAxis >= width || xAxis <= -tileSize) {\n                direction *= -1;\n                xAxis += tileSize * direction;\n                yAxis -= tileSize\n            }\n\n            board.forEach(tile => {\n                ctx.fillStyle = '#ebebeb'\n                ctx.beginPath()\n                ctx.strokeRect(tile.xAxis, tile.yAxis, tile.tileSize, tile.tileSize)\n                ctx.fill()\n                ctx.font = \"20px Arial\";\n                ctx.strokeText(`${tile.index + 1}`, tile.xAxis, tile.yAxis + 50);\n                // if (tile.occupied) \n            })\n\n            \n        }\n    }\n\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}