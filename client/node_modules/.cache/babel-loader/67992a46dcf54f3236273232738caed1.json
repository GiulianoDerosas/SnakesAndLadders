{"ast":null,"code":"import { useEffect, useRef } from \"react\";\nimport Canvas from \"./Canvas\";\n\nconst GameBoard = ctx => {\n  const width = 500;\n  const height = 500;\n  const numCol = 10;\n  const numRow = 10;\n  const tileSize = 50;\n  let yAxis = (numRow - 1) * tileSize;\n  let xAxis = 0;\n  let board = [];\n  let direction = 1;\n\n  for (let index = 0; index < numRow * numRow; index++) {\n    // add each tile to the array\n    board.push({\n      xAxis,\n      yAxis,\n      tileSize,\n      index\n    });\n    xAxis = xAxis + tileSize * direction; // reverse direction after 10th tile and move up 1 tile\n\n    if (xAxis >= width || xAxis <= -tileSize) {\n      direction *= -1;\n      xAxis += tileSize * direction;\n      yAxis -= tileSize;\n    }\n\n    board.forEach(tile => {\n      ctx.fillStyle = '#ebebeb';\n      ctx.beginPath();\n      ctx.strokeRect(tile.xAxis, tile.yAxis, tile.tileSize, tile.tileSize);\n      ctx.fill();\n      ctx.font = \"20px Arial\";\n      ctx.strokeText(`${tile.index + 1}`, tile.xAxis, tile.yAxis + 50); // if (tile.occupied) \n    });\n  }\n\n  retur;\n};\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/src/components/GameBoard.js"],"names":["useEffect","useRef","Canvas","GameBoard","ctx","width","height","numCol","numRow","tileSize","yAxis","xAxis","board","direction","index","push","forEach","tile","fillStyle","beginPath","strokeRect","fill","font","strokeText","retur"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAIA,MAAMC,SAAS,GAAGC,GAAG,IAAI;AACrB,QAAMC,KAAK,GAAG,GAAd;AACA,QAAMC,MAAM,GAAG,GAAf;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACA,MAAIC,KAAK,GAAG,CAACF,MAAM,GAAG,CAAV,IAAeC,QAA3B;AACA,MAAIE,KAAK,GAAG,CAAZ;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,SAAS,GAAG,CAAhB;;AAEA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGN,MAAM,GAAGA,MAArC,EAA6CM,KAAK,EAAlD,EAAsD;AAClD;AACAF,IAAAA,KAAK,CAACG,IAAN,CAAW;AAAEJ,MAAAA,KAAF;AAASD,MAAAA,KAAT;AAAgBD,MAAAA,QAAhB;AAA0BK,MAAAA;AAA1B,KAAX;AACAH,IAAAA,KAAK,GAAGA,KAAK,GAAGF,QAAQ,GAAGI,SAA3B,CAHkD,CAIlD;;AACA,QAAIF,KAAK,IAAIN,KAAT,IAAkBM,KAAK,IAAI,CAACF,QAAhC,EAA0C;AACtCI,MAAAA,SAAS,IAAI,CAAC,CAAd;AACAF,MAAAA,KAAK,IAAIF,QAAQ,GAAGI,SAApB;AACAH,MAAAA,KAAK,IAAID,QAAT;AACH;;AAEDG,IAAAA,KAAK,CAACI,OAAN,CAAcC,IAAI,IAAI;AAClBb,MAAAA,GAAG,CAACc,SAAJ,GAAgB,SAAhB;AACAd,MAAAA,GAAG,CAACe,SAAJ;AACAf,MAAAA,GAAG,CAACgB,UAAJ,CAAeH,IAAI,CAACN,KAApB,EAA2BM,IAAI,CAACP,KAAhC,EAAuCO,IAAI,CAACR,QAA5C,EAAsDQ,IAAI,CAACR,QAA3D;AACAL,MAAAA,GAAG,CAACiB,IAAJ;AACAjB,MAAAA,GAAG,CAACkB,IAAJ,GAAW,YAAX;AACAlB,MAAAA,GAAG,CAACmB,UAAJ,CAAgB,GAAEN,IAAI,CAACH,KAAL,GAAa,CAAE,EAAjC,EAAoCG,IAAI,CAACN,KAAzC,EAAgDM,IAAI,CAACP,KAAL,GAAa,EAA7D,EANkB,CAOlB;AACH,KARD;AAWH;;AAEDc,EAAAA,KAAK;AACR,CApCD;;KAAMrB,S;AAsCN,eAAeA,SAAf","sourcesContent":["import { useEffect, useRef } from \"react\"\nimport Canvas from \"./Canvas\"\n\n\n\nconst GameBoard = ctx => {\n    const width = 500;\n    const height = 500;\n    const numCol = 10;\n    const numRow = 10;\n    const tileSize = 50;\n    let yAxis = (numRow - 1) * tileSize;\n    let xAxis = 0;\n    let board = [];\n    let direction = 1;\n    \n    for (let index = 0; index < numRow * numRow; index++) {\n        // add each tile to the array\n        board.push({ xAxis, yAxis, tileSize, index });\n        xAxis = xAxis + tileSize * direction;\n        // reverse direction after 10th tile and move up 1 tile\n        if (xAxis >= width || xAxis <= -tileSize) {\n            direction *= -1;\n            xAxis += tileSize * direction;\n            yAxis -= tileSize\n        }\n\n        board.forEach(tile => {\n            ctx.fillStyle = '#ebebeb'\n            ctx.beginPath()\n            ctx.strokeRect(tile.xAxis, tile.yAxis, tile.tileSize, tile.tileSize)\n            ctx.fill()\n            ctx.font = \"20px Arial\";\n            ctx.strokeText(`${tile.index + 1}`, tile.xAxis, tile.yAxis + 50);\n            // if (tile.occupied) \n        })\n\n\n    }\n\n    retur\n}\n\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}