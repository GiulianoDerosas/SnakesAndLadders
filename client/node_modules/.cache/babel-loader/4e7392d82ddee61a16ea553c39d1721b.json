{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { _registerNode } from '../Global.js';\nimport { getNumberOrArrayOfNumbersValidator } from '../Validators.js';\nexport class Rect extends Shape {\n  _sceneFunc(context) {\n    var cornerRadius = this.cornerRadius(),\n        width = this.width(),\n        height = this.height();\n    context.beginPath();\n\n    if (!cornerRadius) {\n      context.rect(0, 0, width, height);\n    } else {\n      let topLeft = 0;\n      let topRight = 0;\n      let bottomLeft = 0;\n      let bottomRight = 0;\n\n      if (typeof cornerRadius === 'number') {\n        topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n      } else {\n        topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n        topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n        bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n        bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n      }\n\n      context.moveTo(topLeft, 0);\n      context.lineTo(width - topRight, 0);\n      context.arc(width - topRight, topRight, topRight, Math.PI * 3 / 2, 0, false);\n      context.lineTo(width, height - bottomRight);\n      context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n      context.lineTo(bottomLeft, height);\n      context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n      context.lineTo(0, topLeft);\n      context.arc(topLeft, topLeft, topLeft, Math.PI, Math.PI * 3 / 2, false);\n    }\n\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n\n}\nRect.prototype.className = 'Rect';\n\n_registerNode(Rect);\n\nFactory.addGetterSetter(Rect, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));","map":{"version":3,"sources":["/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/node_modules/konva/lib/shapes/Rect.js"],"names":["Factory","Shape","_registerNode","getNumberOrArrayOfNumbersValidator","Rect","_sceneFunc","context","cornerRadius","width","height","beginPath","rect","topLeft","topRight","bottomLeft","bottomRight","Math","min","moveTo","lineTo","arc","PI","closePath","fillStrokeShape","prototype","className","addGetterSetter"],"mappings":"AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,kCAAT,QAAmD,kBAAnD;AACA,OAAO,MAAMC,IAAN,SAAmBH,KAAnB,CAAyB;AAC5BI,EAAAA,UAAU,CAACC,OAAD,EAAU;AAChB,QAAIC,YAAY,GAAG,KAAKA,YAAL,EAAnB;AAAA,QAAwCC,KAAK,GAAG,KAAKA,KAAL,EAAhD;AAAA,QAA8DC,MAAM,GAAG,KAAKA,MAAL,EAAvE;AACAH,IAAAA,OAAO,CAACI,SAAR;;AACA,QAAI,CAACH,YAAL,EAAmB;AACfD,MAAAA,OAAO,CAACK,IAAR,CAAa,CAAb,EAAgB,CAAhB,EAAmBH,KAAnB,EAA0BC,MAA1B;AACH,KAFD,MAGK;AACD,UAAIG,OAAO,GAAG,CAAd;AACA,UAAIC,QAAQ,GAAG,CAAf;AACA,UAAIC,UAAU,GAAG,CAAjB;AACA,UAAIC,WAAW,GAAG,CAAlB;;AACA,UAAI,OAAOR,YAAP,KAAwB,QAA5B,EAAsC;AAClCK,QAAAA,OAAO,GAAGC,QAAQ,GAAGC,UAAU,GAAGC,WAAW,GAAGC,IAAI,CAACC,GAAL,CAASV,YAAT,EAAuBC,KAAK,GAAG,CAA/B,EAAkCC,MAAM,GAAG,CAA3C,CAAhD;AACH,OAFD,MAGK;AACDG,QAAAA,OAAO,GAAGI,IAAI,CAACC,GAAL,CAASV,YAAY,CAAC,CAAD,CAAZ,IAAmB,CAA5B,EAA+BC,KAAK,GAAG,CAAvC,EAA0CC,MAAM,GAAG,CAAnD,CAAV;AACAI,QAAAA,QAAQ,GAAGG,IAAI,CAACC,GAAL,CAASV,YAAY,CAAC,CAAD,CAAZ,IAAmB,CAA5B,EAA+BC,KAAK,GAAG,CAAvC,EAA0CC,MAAM,GAAG,CAAnD,CAAX;AACAM,QAAAA,WAAW,GAAGC,IAAI,CAACC,GAAL,CAASV,YAAY,CAAC,CAAD,CAAZ,IAAmB,CAA5B,EAA+BC,KAAK,GAAG,CAAvC,EAA0CC,MAAM,GAAG,CAAnD,CAAd;AACAK,QAAAA,UAAU,GAAGE,IAAI,CAACC,GAAL,CAASV,YAAY,CAAC,CAAD,CAAZ,IAAmB,CAA5B,EAA+BC,KAAK,GAAG,CAAvC,EAA0CC,MAAM,GAAG,CAAnD,CAAb;AACH;;AACDH,MAAAA,OAAO,CAACY,MAAR,CAAeN,OAAf,EAAwB,CAAxB;AACAN,MAAAA,OAAO,CAACa,MAAR,CAAeX,KAAK,GAAGK,QAAvB,EAAiC,CAAjC;AACAP,MAAAA,OAAO,CAACc,GAAR,CAAYZ,KAAK,GAAGK,QAApB,EAA8BA,QAA9B,EAAwCA,QAAxC,EAAmDG,IAAI,CAACK,EAAL,GAAU,CAAX,GAAgB,CAAlE,EAAqE,CAArE,EAAwE,KAAxE;AACAf,MAAAA,OAAO,CAACa,MAAR,CAAeX,KAAf,EAAsBC,MAAM,GAAGM,WAA/B;AACAT,MAAAA,OAAO,CAACc,GAAR,CAAYZ,KAAK,GAAGO,WAApB,EAAiCN,MAAM,GAAGM,WAA1C,EAAuDA,WAAvD,EAAoE,CAApE,EAAuEC,IAAI,CAACK,EAAL,GAAU,CAAjF,EAAoF,KAApF;AACAf,MAAAA,OAAO,CAACa,MAAR,CAAeL,UAAf,EAA2BL,MAA3B;AACAH,MAAAA,OAAO,CAACc,GAAR,CAAYN,UAAZ,EAAwBL,MAAM,GAAGK,UAAjC,EAA6CA,UAA7C,EAAyDE,IAAI,CAACK,EAAL,GAAU,CAAnE,EAAsEL,IAAI,CAACK,EAA3E,EAA+E,KAA/E;AACAf,MAAAA,OAAO,CAACa,MAAR,CAAe,CAAf,EAAkBP,OAAlB;AACAN,MAAAA,OAAO,CAACc,GAAR,CAAYR,OAAZ,EAAqBA,OAArB,EAA8BA,OAA9B,EAAuCI,IAAI,CAACK,EAA5C,EAAiDL,IAAI,CAACK,EAAL,GAAU,CAAX,GAAgB,CAAhE,EAAmE,KAAnE;AACH;;AACDf,IAAAA,OAAO,CAACgB,SAAR;AACAhB,IAAAA,OAAO,CAACiB,eAAR,CAAwB,IAAxB;AACH;;AAjC2B;AAmChCnB,IAAI,CAACoB,SAAL,CAAeC,SAAf,GAA2B,MAA3B;;AACAvB,aAAa,CAACE,IAAD,CAAb;;AACAJ,OAAO,CAAC0B,eAAR,CAAwBtB,IAAxB,EAA8B,cAA9B,EAA8C,CAA9C,EAAiDD,kCAAkC,CAAC,CAAD,CAAnF","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { _registerNode } from '../Global.js';\nimport { getNumberOrArrayOfNumbersValidator } from '../Validators.js';\nexport class Rect extends Shape {\n    _sceneFunc(context) {\n        var cornerRadius = this.cornerRadius(), width = this.width(), height = this.height();\n        context.beginPath();\n        if (!cornerRadius) {\n            context.rect(0, 0, width, height);\n        }\n        else {\n            let topLeft = 0;\n            let topRight = 0;\n            let bottomLeft = 0;\n            let bottomRight = 0;\n            if (typeof cornerRadius === 'number') {\n                topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n            }\n            else {\n                topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n                topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n                bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n                bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n            }\n            context.moveTo(topLeft, 0);\n            context.lineTo(width - topRight, 0);\n            context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n            context.lineTo(width, height - bottomRight);\n            context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n            context.lineTo(bottomLeft, height);\n            context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n            context.lineTo(0, topLeft);\n            context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n}\nRect.prototype.className = 'Rect';\n_registerNode(Rect);\nFactory.addGetterSetter(Rect, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));\n"]},"metadata":{},"sourceType":"module"}