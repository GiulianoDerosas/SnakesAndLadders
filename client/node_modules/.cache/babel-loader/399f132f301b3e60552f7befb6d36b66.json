{"ast":null,"code":"import { Factory } from './Factory.js';\nimport { Node } from './Node.js';\nimport { getNumberValidator } from './Validators.js';\nexport class Container extends Node {\n  constructor() {\n    super(...arguments);\n    this.children = [];\n  }\n\n  getChildren(filterFunc) {\n    if (!filterFunc) {\n      return this.children || [];\n    }\n\n    const children = this.children || [];\n    var results = [];\n    children.forEach(function (child) {\n      if (filterFunc(child)) {\n        results.push(child);\n      }\n    });\n    return results;\n  }\n\n  hasChildren() {\n    return this.getChildren().length > 0;\n  }\n\n  removeChildren() {\n    this.getChildren().forEach(child => {\n      child.parent = null;\n      child.index = 0;\n      child.remove();\n    });\n    this.children = [];\n    return this;\n  }\n\n  destroyChildren() {\n    this.getChildren().forEach(child => {\n      child.parent = null;\n      child.index = 0;\n      child.destroy();\n    });\n    this.children = [];\n    return this;\n  }\n\n  add(...children) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n\n      return this;\n    }\n\n    var child = children[0];\n\n    if (child.getParent()) {\n      child.moveTo(this);\n      return this;\n    }\n\n    this._validateAdd(child);\n\n    child._clearCaches();\n\n    child.index = this.getChildren().length;\n    child.parent = this;\n    this.getChildren().push(child);\n\n    this._fire('add', {\n      child: child\n    });\n\n    this._requestDraw();\n\n    return this;\n  }\n\n  destroy() {\n    if (this.hasChildren()) {\n      this.destroyChildren();\n    }\n\n    super.destroy();\n    return this;\n  }\n\n  find(selector) {\n    return this._generalFind(selector, false);\n  }\n\n  findOne(selector) {\n    var result = this._generalFind(selector, true);\n\n    return result.length > 0 ? result[0] : undefined;\n  }\n\n  _generalFind(selector, findOne) {\n    var retArr = [];\n\n    this._descendants(node => {\n      const valid = node._isMatch(selector);\n\n      if (valid) {\n        retArr.push(node);\n      }\n\n      if (valid && findOne) {\n        return true;\n      }\n\n      return false;\n    });\n\n    return retArr;\n  }\n\n  _descendants(fn) {\n    let shouldStop = false;\n    const children = this.getChildren();\n\n    for (const child of children) {\n      shouldStop = fn(child);\n\n      if (shouldStop) {\n        return true;\n      }\n\n      if (!child.hasChildren()) {\n        continue;\n      }\n\n      shouldStop = child._descendants(fn);\n\n      if (shouldStop) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  toObject() {\n    var obj = Node.prototype.toObject.call(this);\n    obj.children = [];\n    this.getChildren().forEach(child => {\n      obj.children.push(child.toObject());\n    });\n    return obj;\n  }\n\n  isAncestorOf(node) {\n    var parent = node.getParent();\n\n    while (parent) {\n      if (parent._id === this._id) {\n        return true;\n      }\n\n      parent = parent.getParent();\n    }\n\n    return false;\n  }\n\n  clone(obj) {\n    var node = Node.prototype.clone.call(this, obj);\n    this.getChildren().forEach(function (no) {\n      node.add(no.clone());\n    });\n    return node;\n  }\n\n  getAllIntersections(pos) {\n    var arr = [];\n    this.find('Shape').forEach(function (shape) {\n      if (shape.isVisible() && shape.intersects(pos)) {\n        arr.push(shape);\n      }\n    });\n    return arr;\n  }\n\n  _clearSelfAndDescendantCache(attr) {\n    var _a;\n\n    super._clearSelfAndDescendantCache(attr);\n\n    if (this.isCached()) {\n      return;\n    }\n\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\n      node._clearSelfAndDescendantCache(attr);\n    });\n  }\n\n  _setChildrenIndices() {\n    var _a;\n\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child, n) {\n      child.index = n;\n    });\n\n    this._requestDraw();\n  }\n\n  drawScene(can, top) {\n    var layer = this.getLayer(),\n        canvas = can || layer && layer.getCanvas(),\n        context = canvas && canvas.getContext(),\n        cachedCanvas = this._getCanvasCache(),\n        cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n\n    var caching = canvas && canvas.isCache;\n\n    if (!this.isVisible() && !caching) {\n      return this;\n    }\n\n    if (cachedSceneCanvas) {\n      context.save();\n      var m = this.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n      this._drawCachedSceneCanvas(context);\n\n      context.restore();\n    } else {\n      this._drawChildren('drawScene', canvas, top);\n    }\n\n    return this;\n  }\n\n  drawHit(can, top) {\n    if (!this.shouldDrawHit(top)) {\n      return this;\n    }\n\n    var layer = this.getLayer(),\n        canvas = can || layer && layer.hitCanvas,\n        context = canvas && canvas.getContext(),\n        cachedCanvas = this._getCanvasCache(),\n        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\n    if (cachedHitCanvas) {\n      context.save();\n      var m = this.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n      this._drawCachedHitCanvas(context);\n\n      context.restore();\n    } else {\n      this._drawChildren('drawHit', canvas, top);\n    }\n\n    return this;\n  }\n\n  _drawChildren(drawMethod, canvas, top) {\n    var _a;\n\n    var context = canvas && canvas.getContext(),\n        clipWidth = this.clipWidth(),\n        clipHeight = this.clipHeight(),\n        clipFunc = this.clipFunc(),\n        hasClip = clipWidth && clipHeight || clipFunc;\n    const selfCache = top === this;\n\n    if (hasClip) {\n      context.save();\n      var transform = this.getAbsoluteTransform(top);\n      var m = transform.getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      context.beginPath();\n\n      if (clipFunc) {\n        clipFunc.call(this, context, this);\n      } else {\n        var clipX = this.clipX();\n        var clipY = this.clipY();\n        context.rect(clipX, clipY, clipWidth, clipHeight);\n      }\n\n      context.clip();\n      m = transform.copy().invert().getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n\n    var hasComposition = !selfCache && this.globalCompositeOperation() !== 'source-over' && drawMethod === 'drawScene';\n\n    if (hasComposition) {\n      context.save();\n\n      context._applyGlobalCompositeOperation(this);\n    }\n\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n      child[drawMethod](canvas, top);\n    });\n\n    if (hasComposition) {\n      context.restore();\n    }\n\n    if (hasClip) {\n      context.restore();\n    }\n  }\n\n  getClientRect(config) {\n    var _a;\n\n    config = config || {};\n    var skipTransform = config.skipTransform;\n    var relativeTo = config.relativeTo;\n    var minX, minY, maxX, maxY;\n    var selfRect = {\n      x: Infinity,\n      y: Infinity,\n      width: 0,\n      height: 0\n    };\n    var that = this;\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n      if (!child.visible()) {\n        return;\n      }\n\n      var rect = child.getClientRect({\n        relativeTo: that,\n        skipShadow: config.skipShadow,\n        skipStroke: config.skipStroke\n      });\n\n      if (rect.width === 0 && rect.height === 0) {\n        return;\n      }\n\n      if (minX === undefined) {\n        minX = rect.x;\n        minY = rect.y;\n        maxX = rect.x + rect.width;\n        maxY = rect.y + rect.height;\n      } else {\n        minX = Math.min(minX, rect.x);\n        minY = Math.min(minY, rect.y);\n        maxX = Math.max(maxX, rect.x + rect.width);\n        maxY = Math.max(maxY, rect.y + rect.height);\n      }\n    });\n    var shapes = this.find('Shape');\n    var hasVisible = false;\n\n    for (var i = 0; i < shapes.length; i++) {\n      var shape = shapes[i];\n\n      if (shape._isVisible(this)) {\n        hasVisible = true;\n        break;\n      }\n    }\n\n    if (hasVisible && minX !== undefined) {\n      selfRect = {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    } else {\n      selfRect = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (!skipTransform) {\n      return this._transformedRect(selfRect, relativeTo);\n    }\n\n    return selfRect;\n  }\n\n}\nFactory.addComponentsGetterSetter(Container, 'clip', ['x', 'y', 'width', 'height']);\nFactory.addGetterSetter(Container, 'clipX', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipY', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipWidth', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipHeight', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipFunc');","map":{"version":3,"sources":["/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/node_modules/konva/lib/Container.js"],"names":["Factory","Node","getNumberValidator","Container","constructor","arguments","children","getChildren","filterFunc","results","forEach","child","push","hasChildren","length","removeChildren","parent","index","remove","destroyChildren","destroy","add","i","getParent","moveTo","_validateAdd","_clearCaches","_fire","_requestDraw","find","selector","_generalFind","findOne","result","undefined","retArr","_descendants","node","valid","_isMatch","fn","shouldStop","toObject","obj","prototype","call","isAncestorOf","_id","clone","no","getAllIntersections","pos","arr","shape","isVisible","intersects","_clearSelfAndDescendantCache","attr","_a","isCached","_setChildrenIndices","n","drawScene","can","top","layer","getLayer","canvas","getCanvas","context","getContext","cachedCanvas","_getCanvasCache","cachedSceneCanvas","scene","caching","isCache","save","m","getAbsoluteTransform","getMatrix","transform","_drawCachedSceneCanvas","restore","_drawChildren","drawHit","shouldDrawHit","hitCanvas","cachedHitCanvas","hit","_drawCachedHitCanvas","drawMethod","clipWidth","clipHeight","clipFunc","hasClip","selfCache","beginPath","clipX","clipY","rect","clip","copy","invert","hasComposition","globalCompositeOperation","_applyGlobalCompositeOperation","getClientRect","config","skipTransform","relativeTo","minX","minY","maxX","maxY","selfRect","x","Infinity","y","width","height","that","visible","skipShadow","skipStroke","Math","min","max","shapes","hasVisible","_isVisible","_transformedRect","addComponentsGetterSetter","addGetterSetter"],"mappings":"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","sourcesContent":["import { Factory } from './Factory.js';\nimport { Node } from './Node.js';\nimport { getNumberValidator } from './Validators.js';\nexport class Container extends Node {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n    }\n    getChildren(filterFunc) {\n        if (!filterFunc) {\n            return this.children || [];\n        }\n        const children = this.children || [];\n        var results = [];\n        children.forEach(function (child) {\n            if (filterFunc(child)) {\n                results.push(child);\n            }\n        });\n        return results;\n    }\n    hasChildren() {\n        return this.getChildren().length > 0;\n    }\n    removeChildren() {\n        this.getChildren().forEach((child) => {\n            child.parent = null;\n            child.index = 0;\n            child.remove();\n        });\n        this.children = [];\n        return this;\n    }\n    destroyChildren() {\n        this.getChildren().forEach((child) => {\n            child.parent = null;\n            child.index = 0;\n            child.destroy();\n        });\n        this.children = [];\n        return this;\n    }\n    add(...children) {\n        if (arguments.length > 1) {\n            for (var i = 0; i < arguments.length; i++) {\n                this.add(arguments[i]);\n            }\n            return this;\n        }\n        var child = children[0];\n        if (child.getParent()) {\n            child.moveTo(this);\n            return this;\n        }\n        this._validateAdd(child);\n        child._clearCaches();\n        child.index = this.getChildren().length;\n        child.parent = this;\n        this.getChildren().push(child);\n        this._fire('add', {\n            child: child,\n        });\n        this._requestDraw();\n        return this;\n    }\n    destroy() {\n        if (this.hasChildren()) {\n            this.destroyChildren();\n        }\n        super.destroy();\n        return this;\n    }\n    find(selector) {\n        return this._generalFind(selector, false);\n    }\n    findOne(selector) {\n        var result = this._generalFind(selector, true);\n        return result.length > 0 ? result[0] : undefined;\n    }\n    _generalFind(selector, findOne) {\n        var retArr = [];\n        this._descendants((node) => {\n            const valid = node._isMatch(selector);\n            if (valid) {\n                retArr.push(node);\n            }\n            if (valid && findOne) {\n                return true;\n            }\n            return false;\n        });\n        return retArr;\n    }\n    _descendants(fn) {\n        let shouldStop = false;\n        const children = this.getChildren();\n        for (const child of children) {\n            shouldStop = fn(child);\n            if (shouldStop) {\n                return true;\n            }\n            if (!child.hasChildren()) {\n                continue;\n            }\n            shouldStop = child._descendants(fn);\n            if (shouldStop) {\n                return true;\n            }\n        }\n        return false;\n    }\n    toObject() {\n        var obj = Node.prototype.toObject.call(this);\n        obj.children = [];\n        this.getChildren().forEach((child) => {\n            obj.children.push(child.toObject());\n        });\n        return obj;\n    }\n    isAncestorOf(node) {\n        var parent = node.getParent();\n        while (parent) {\n            if (parent._id === this._id) {\n                return true;\n            }\n            parent = parent.getParent();\n        }\n        return false;\n    }\n    clone(obj) {\n        var node = Node.prototype.clone.call(this, obj);\n        this.getChildren().forEach(function (no) {\n            node.add(no.clone());\n        });\n        return node;\n    }\n    getAllIntersections(pos) {\n        var arr = [];\n        this.find('Shape').forEach(function (shape) {\n            if (shape.isVisible() && shape.intersects(pos)) {\n                arr.push(shape);\n            }\n        });\n        return arr;\n    }\n    _clearSelfAndDescendantCache(attr) {\n        var _a;\n        super._clearSelfAndDescendantCache(attr);\n        if (this.isCached()) {\n            return;\n        }\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\n            node._clearSelfAndDescendantCache(attr);\n        });\n    }\n    _setChildrenIndices() {\n        var _a;\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child, n) {\n            child.index = n;\n        });\n        this._requestDraw();\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas()), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n        var caching = canvas && canvas.isCache;\n        if (!this.isVisible() && !caching) {\n            return this;\n        }\n        if (cachedSceneCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedSceneCanvas(context);\n            context.restore();\n        }\n        else {\n            this._drawChildren('drawScene', canvas, top);\n        }\n        return this;\n    }\n    drawHit(can, top) {\n        if (!this.shouldDrawHit(top)) {\n            return this;\n        }\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (cachedHitCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedHitCanvas(context);\n            context.restore();\n        }\n        else {\n            this._drawChildren('drawHit', canvas, top);\n        }\n        return this;\n    }\n    _drawChildren(drawMethod, canvas, top) {\n        var _a;\n        var context = canvas && canvas.getContext(), clipWidth = this.clipWidth(), clipHeight = this.clipHeight(), clipFunc = this.clipFunc(), hasClip = (clipWidth && clipHeight) || clipFunc;\n        const selfCache = top === this;\n        if (hasClip) {\n            context.save();\n            var transform = this.getAbsoluteTransform(top);\n            var m = transform.getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            context.beginPath();\n            if (clipFunc) {\n                clipFunc.call(this, context, this);\n            }\n            else {\n                var clipX = this.clipX();\n                var clipY = this.clipY();\n                context.rect(clipX, clipY, clipWidth, clipHeight);\n            }\n            context.clip();\n            m = transform.copy().invert().getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        }\n        var hasComposition = !selfCache &&\n            this.globalCompositeOperation() !== 'source-over' &&\n            drawMethod === 'drawScene';\n        if (hasComposition) {\n            context.save();\n            context._applyGlobalCompositeOperation(this);\n        }\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            child[drawMethod](canvas, top);\n        });\n        if (hasComposition) {\n            context.restore();\n        }\n        if (hasClip) {\n            context.restore();\n        }\n    }\n    getClientRect(config) {\n        var _a;\n        config = config || {};\n        var skipTransform = config.skipTransform;\n        var relativeTo = config.relativeTo;\n        var minX, minY, maxX, maxY;\n        var selfRect = {\n            x: Infinity,\n            y: Infinity,\n            width: 0,\n            height: 0,\n        };\n        var that = this;\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            if (!child.visible()) {\n                return;\n            }\n            var rect = child.getClientRect({\n                relativeTo: that,\n                skipShadow: config.skipShadow,\n                skipStroke: config.skipStroke,\n            });\n            if (rect.width === 0 && rect.height === 0) {\n                return;\n            }\n            if (minX === undefined) {\n                minX = rect.x;\n                minY = rect.y;\n                maxX = rect.x + rect.width;\n                maxY = rect.y + rect.height;\n            }\n            else {\n                minX = Math.min(minX, rect.x);\n                minY = Math.min(minY, rect.y);\n                maxX = Math.max(maxX, rect.x + rect.width);\n                maxY = Math.max(maxY, rect.y + rect.height);\n            }\n        });\n        var shapes = this.find('Shape');\n        var hasVisible = false;\n        for (var i = 0; i < shapes.length; i++) {\n            var shape = shapes[i];\n            if (shape._isVisible(this)) {\n                hasVisible = true;\n                break;\n            }\n        }\n        if (hasVisible && minX !== undefined) {\n            selfRect = {\n                x: minX,\n                y: minY,\n                width: maxX - minX,\n                height: maxY - minY,\n            };\n        }\n        else {\n            selfRect = {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        if (!skipTransform) {\n            return this._transformedRect(selfRect, relativeTo);\n        }\n        return selfRect;\n    }\n}\nFactory.addComponentsGetterSetter(Container, 'clip', [\n    'x',\n    'y',\n    'width',\n    'height',\n]);\nFactory.addGetterSetter(Container, 'clipX', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipY', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipWidth', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipHeight', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipFunc');\n"]},"metadata":{},"sourceType":"module"}