{"ast":null,"code":"var _jsxFileName = \"/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/src/components/GameBoard.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameBoard = () => {\n  const width = 500;\n  const height = 500;\n  const numCol = 10;\n  const numRow = 10;\n  const tileSize = 50;\n  let yAxis = (numRow - 1) * tileSize;\n  let xAxis = 0;\n  let board = [];\n  let direction = 1;\n  let boardHTML = \"\";\n\n  for (let index = 0; index < numRow * numRow; index++) {\n    board.push({\n      xAxis,\n      yAxis,\n      tileSize,\n      index\n    });\n    xAxis = xAxis + tileSize * direction;\n\n    if (xAxis >= width || xAxis <= -tileSize) {\n      direction *= -1;\n      xAxis += tileSize * direction;\n      yAxis -= tileSize;\n    }\n  }\n\n  console.log(board);\n  return board.forEach(tile => {\n    boardHTML += /*#__PURE__*/_jsxDEV(\"div\", {\n      classname: \"square\",\n      style: \"top:${width}px; left:${height}px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 26\n    }, this);\n  });\n};\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/src/components/GameBoard.js"],"names":["GameBoard","width","height","numCol","numRow","tileSize","yAxis","xAxis","board","direction","boardHTML","index","push","console","log","forEach","tile"],"mappings":";;;AACA,MAAMA,SAAS,GAAG,MAAM;AAEpB,QAAMC,KAAK,GAAG,GAAd;AACA,QAAMC,MAAM,GAAG,GAAf;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACA,MAAIC,KAAK,GAAG,CAACF,MAAM,GAAE,CAAT,IAAeC,QAA3B;AACA,MAAIE,KAAK,GAAG,CAAZ;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,SAAS,GAAG,EAAhB;;AAEA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGP,MAAM,GAAGA,MAArC,EAA6CO,KAAK,EAAlD,EAAsD;AAClDH,IAAAA,KAAK,CAACI,IAAN,CAAW;AAACL,MAAAA,KAAD;AAAQD,MAAAA,KAAR;AAAeD,MAAAA,QAAf;AAAyBM,MAAAA;AAAzB,KAAX;AACAJ,IAAAA,KAAK,GAAGA,KAAK,GAAGF,QAAQ,GAAGI,SAA3B;;AACA,QAAIF,KAAK,IAAIN,KAAT,IAAkBM,KAAK,IAAI,CAACF,QAAhC,EAA0C;AACtCI,MAAAA,SAAS,IAAG,CAAC,CAAb;AACAF,MAAAA,KAAK,IAAIF,QAAQ,GAAGI,SAApB;AACAH,MAAAA,KAAK,IAAID,QAAT;AACH;AACJ;;AACDQ,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAEA,SACIA,KAAK,CAACO,OAAN,CAAcC,IAAI,IAAI;AAClBN,IAAAA,SAAS,iBAAI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,KAAK,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAb;AACH,GAFD,CADJ;AAKH,CA7BD;;KAAMV,S;AA+BN,eAAeA,SAAf","sourcesContent":["\nconst GameBoard = () => {\n\n    const width = 500;\n    const height = 500;\n    const numCol = 10;\n    const numRow = 10;\n    const tileSize = 50;\n    let yAxis = (numRow -1 ) * tileSize;\n    let xAxis = 0;\n    let board = [];\n    let direction = 1;\n    let boardHTML = \"\";\n\n    for (let index = 0; index < numRow * numRow; index++) {\n        board.push({xAxis, yAxis, tileSize, index});\n        xAxis = xAxis + tileSize * direction;\n        if (xAxis >= width || xAxis <= -tileSize) {\n            direction*= -1;\n            xAxis += tileSize * direction;\n            yAxis -= tileSize\n        }\n    }\n    console.log(board)\n\n    return (\n        board.forEach(tile => {\n            boardHTML += <div classname=\"square\" style=\"top:${width}px; left:${height}px\"></div>\n        })\n    )\n}\n\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}