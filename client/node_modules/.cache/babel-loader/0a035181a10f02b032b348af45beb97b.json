{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Ellipse extends Shape {\n  _sceneFunc(context) {\n    var rx = this.radiusX(),\n        ry = this.radiusY();\n    context.beginPath();\n    context.save();\n\n    if (rx !== ry) {\n      context.scale(1, ry / rx);\n    }\n\n    context.arc(0, 0, rx, 0, Math.PI * 2, false);\n    context.restore();\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n\n  getWidth() {\n    return this.radiusX() * 2;\n  }\n\n  getHeight() {\n    return this.radiusY() * 2;\n  }\n\n  setWidth(width) {\n    this.radiusX(width / 2);\n  }\n\n  setHeight(height) {\n    this.radiusY(height / 2);\n  }\n\n}\nEllipse.prototype.className = 'Ellipse';\nEllipse.prototype._centroid = true;\nEllipse.prototype._attrsAffectingSize = ['radiusX', 'radiusY'];\n\n_registerNode(Ellipse);\n\nFactory.addComponentsGetterSetter(Ellipse, 'radius', ['x', 'y']);\nFactory.addGetterSetter(Ellipse, 'radiusX', 0, getNumberValidator());\nFactory.addGetterSetter(Ellipse, 'radiusY', 0, getNumberValidator());","map":{"version":3,"sources":["/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/node_modules/konva/lib/shapes/Ellipse.js"],"names":["Factory","Shape","getNumberValidator","_registerNode","Ellipse","_sceneFunc","context","rx","radiusX","ry","radiusY","beginPath","save","scale","arc","Math","PI","restore","closePath","fillStrokeShape","getWidth","getHeight","setWidth","width","setHeight","height","prototype","className","_centroid","_attrsAffectingSize","addComponentsGetterSetter","addGetterSetter"],"mappings":"AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,OAAO,MAAMC,OAAN,SAAsBH,KAAtB,CAA4B;AAC/BI,EAAAA,UAAU,CAACC,OAAD,EAAU;AAChB,QAAIC,EAAE,GAAG,KAAKC,OAAL,EAAT;AAAA,QAAyBC,EAAE,GAAG,KAAKC,OAAL,EAA9B;AACAJ,IAAAA,OAAO,CAACK,SAAR;AACAL,IAAAA,OAAO,CAACM,IAAR;;AACA,QAAIL,EAAE,KAAKE,EAAX,EAAe;AACXH,MAAAA,OAAO,CAACO,KAAR,CAAc,CAAd,EAAiBJ,EAAE,GAAGF,EAAtB;AACH;;AACDD,IAAAA,OAAO,CAACQ,GAAR,CAAY,CAAZ,EAAe,CAAf,EAAkBP,EAAlB,EAAsB,CAAtB,EAAyBQ,IAAI,CAACC,EAAL,GAAU,CAAnC,EAAsC,KAAtC;AACAV,IAAAA,OAAO,CAACW,OAAR;AACAX,IAAAA,OAAO,CAACY,SAAR;AACAZ,IAAAA,OAAO,CAACa,eAAR,CAAwB,IAAxB;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKZ,OAAL,KAAiB,CAAxB;AACH;;AACDa,EAAAA,SAAS,GAAG;AACR,WAAO,KAAKX,OAAL,KAAiB,CAAxB;AACH;;AACDY,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,SAAKf,OAAL,CAAae,KAAK,GAAG,CAArB;AACH;;AACDC,EAAAA,SAAS,CAACC,MAAD,EAAS;AACd,SAAKf,OAAL,CAAae,MAAM,GAAG,CAAtB;AACH;;AAxB8B;AA0BnCrB,OAAO,CAACsB,SAAR,CAAkBC,SAAlB,GAA8B,SAA9B;AACAvB,OAAO,CAACsB,SAAR,CAAkBE,SAAlB,GAA8B,IAA9B;AACAxB,OAAO,CAACsB,SAAR,CAAkBG,mBAAlB,GAAwC,CAAC,SAAD,EAAY,SAAZ,CAAxC;;AACA1B,aAAa,CAACC,OAAD,CAAb;;AACAJ,OAAO,CAAC8B,yBAAR,CAAkC1B,OAAlC,EAA2C,QAA3C,EAAqD,CAAC,GAAD,EAAM,GAAN,CAArD;AACAJ,OAAO,CAAC+B,eAAR,CAAwB3B,OAAxB,EAAiC,SAAjC,EAA4C,CAA5C,EAA+CF,kBAAkB,EAAjE;AACAF,OAAO,CAAC+B,eAAR,CAAwB3B,OAAxB,EAAiC,SAAjC,EAA4C,CAA5C,EAA+CF,kBAAkB,EAAjE","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Ellipse extends Shape {\n    _sceneFunc(context) {\n        var rx = this.radiusX(), ry = this.radiusY();\n        context.beginPath();\n        context.save();\n        if (rx !== ry) {\n            context.scale(1, ry / rx);\n        }\n        context.arc(0, 0, rx, 0, Math.PI * 2, false);\n        context.restore();\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radiusX() * 2;\n    }\n    getHeight() {\n        return this.radiusY() * 2;\n    }\n    setWidth(width) {\n        this.radiusX(width / 2);\n    }\n    setHeight(height) {\n        this.radiusY(height / 2);\n    }\n}\nEllipse.prototype.className = 'Ellipse';\nEllipse.prototype._centroid = true;\nEllipse.prototype._attrsAffectingSize = ['radiusX', 'radiusY'];\n_registerNode(Ellipse);\nFactory.addComponentsGetterSetter(Ellipse, 'radius', ['x', 'y']);\nFactory.addGetterSetter(Ellipse, 'radiusX', 0, getNumberValidator());\nFactory.addGetterSetter(Ellipse, 'radiusY', 0, getNumberValidator());\n"]},"metadata":{},"sourceType":"module"}