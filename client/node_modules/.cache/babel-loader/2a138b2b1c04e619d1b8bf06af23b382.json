{"ast":null,"code":"var _jsxFileName = \"/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/src/components/GameBoard.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameBoard = () => {\n  _s();\n\n  const width = 500;\n  const height = 500;\n  const numCol = 10;\n  const numRow = 10;\n  const tileSize = 50;\n  let yAxis = (numRow - 1) * tileSize;\n  let xAxis = 0;\n  let board = [];\n  let direction = 1;\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = width;\n    canvas.height = height;\n    const context = canvas.getContext('2d');\n  }, []);\n\n  for (let index = 0; index < numRow * numRow; index++) {\n    // add each tile to the array\n    board.push({\n      xAxis,\n      yAxis,\n      tileSize,\n      index\n    });\n    xAxis = xAxis + tileSize * direction; // reverse direction after 10th tile and move up 1 tile\n\n    if (xAxis >= width || xAxis <= -tileSize) {\n      direction *= -1;\n      xAxis += tileSize * direction;\n      yAxis -= tileSize;\n    }\n  }\n\n  console.log(board);\n  return (\n    /*#__PURE__*/\n    // <div className=\"display-board\">{board.map(tile => {\n    //     return <div className=\"tile\" style={{height: `${tileSize}px`}} style={{width: `${tileSize}px`}}></div>\n    // })}</div>\n    _jsxDEV(\"canvas\", {\n      children: \"ref=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(GameBoard, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/src/components/GameBoard.js"],"names":["useEffect","useRef","GameBoard","width","height","numCol","numRow","tileSize","yAxis","xAxis","board","direction","canvasRef","canvas","current","context","getContext","index","push","console","log"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,MAAnB,QAAgC,OAAhC;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAMC,KAAK,GAAG,GAAd;AACA,QAAMC,MAAM,GAAG,GAAf;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACA,MAAIC,KAAK,GAAG,CAACF,MAAM,GAAE,CAAT,IAAeC,QAA3B;AACA,MAAIE,KAAK,GAAG,CAAZ;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,QAAMC,SAAS,GAAGX,MAAM,CAAC,IAAD,CAAxB;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACAD,IAAAA,MAAM,CAACV,KAAP,GAAeA,KAAf;AACAU,IAAAA,MAAM,CAACT,MAAP,GAAgBA,MAAhB;AACA,UAAMW,OAAO,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAhB;AACH,GALQ,EAKN,EALM,CAAT;;AASA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGX,MAAM,GAAGA,MAArC,EAA6CW,KAAK,EAAlD,EAAsD;AAClD;AACAP,IAAAA,KAAK,CAACQ,IAAN,CAAW;AAACT,MAAAA,KAAD;AAAQD,MAAAA,KAAR;AAAeD,MAAAA,QAAf;AAAyBU,MAAAA;AAAzB,KAAX;AACAR,IAAAA,KAAK,GAAGA,KAAK,GAAGF,QAAQ,GAAGI,SAA3B,CAHkD,CAIlD;;AACA,QAAIF,KAAK,IAAIN,KAAT,IAAkBM,KAAK,IAAI,CAACF,QAAhC,EAA0C;AACtCI,MAAAA,SAAS,IAAG,CAAC,CAAb;AACAF,MAAAA,KAAK,IAAIF,QAAQ,GAAGI,SAApB;AACAH,MAAAA,KAAK,IAAID,QAAT;AACH;AACJ;;AACDY,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AAEA;AAAA;AACI;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAUH,CA9CD;;GAAMR,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import {useEffect, useRef} from \"react\"\nconst GameBoard = () => {\n\n    const width = 500;\n    const height = 500;\n    const numCol = 10;\n    const numRow = 10;\n    const tileSize = 50;\n    let yAxis = (numRow -1 ) * tileSize;\n    let xAxis = 0;\n    let board = [];\n    let direction = 1;\n    const canvasRef = useRef(null)\n    \n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        canvas.width = width;\n        canvas.height = height;\n        const context = canvas.getContext('2d')\n    }, [])\n\n    \n\n    for (let index = 0; index < numRow * numRow; index++) {\n        // add each tile to the array\n        board.push({xAxis, yAxis, tileSize, index});\n        xAxis = xAxis + tileSize * direction;\n        // reverse direction after 10th tile and move up 1 tile\n        if (xAxis >= width || xAxis <= -tileSize) {\n            direction*= -1;\n            xAxis += tileSize * direction;\n            yAxis -= tileSize\n        }\n    }\n    console.log(board)\n\n    return (\n        // <div className=\"display-board\">{board.map(tile => {\n        //     return <div className=\"tile\" style={{height: `${tileSize}px`}} style={{width: `${tileSize}px`}}></div>\n        // })}</div>\n\n        <canvas>\n            ref=\n        </canvas>\n\n    )\n}\n\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}