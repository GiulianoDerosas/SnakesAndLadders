{"ast":null,"code":"var PI_OVER_180 = Math.PI / 180;\n\nfunction detectBrowser() {\n  return typeof window !== 'undefined' && ({}.toString.call(window) === '[object Window]' || {}.toString.call(window) === '[object global]');\n}\n\nexport const glob = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof WorkerGlobalScope !== 'undefined' ? self : {};\nexport const Konva = {\n  _global: glob,\n  version: '8.0.1',\n  isBrowser: detectBrowser(),\n  isUnminified: /param/.test(function (param) {}.toString()),\n  dblClickWindow: 400,\n\n  getAngle(angle) {\n    return Konva.angleDeg ? angle * PI_OVER_180 : angle;\n  },\n\n  enableTrace: false,\n  pointerEventsEnabled: true,\n  autoDrawEnabled: true,\n  hitOnDragEnabled: false,\n  capturePointerEventsEnabled: false,\n  _mouseListenClick: false,\n  _touchListenClick: false,\n  _pointerListenClick: false,\n  _mouseInDblClickWindow: false,\n  _touchInDblClickWindow: false,\n  _pointerInDblClickWindow: false,\n  pixelRatio: typeof window !== 'undefined' && window.devicePixelRatio || 1,\n  dragDistance: 3,\n  angleDeg: true,\n  showWarnings: true,\n  dragButtons: [0, 1],\n\n  isDragging() {\n    return Konva['DD'].isDragging;\n  },\n\n  isDragReady() {\n    return !!Konva['DD'].node;\n  },\n\n  document: glob.document,\n\n  _injectGlobal(Konva) {\n    glob.Konva = Konva;\n  }\n\n};\nexport const _registerNode = NodeClass => {\n  Konva[NodeClass.prototype.getClassName()] = NodeClass;\n};\n\nKonva._injectGlobal(Konva);","map":{"version":3,"sources":["/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/node_modules/konva/lib/Global.js"],"names":["PI_OVER_180","Math","PI","detectBrowser","window","toString","call","glob","global","WorkerGlobalScope","self","Konva","_global","version","isBrowser","isUnminified","test","param","dblClickWindow","getAngle","angle","angleDeg","enableTrace","pointerEventsEnabled","autoDrawEnabled","hitOnDragEnabled","capturePointerEventsEnabled","_mouseListenClick","_touchListenClick","_pointerListenClick","_mouseInDblClickWindow","_touchInDblClickWindow","_pointerInDblClickWindow","pixelRatio","devicePixelRatio","dragDistance","showWarnings","dragButtons","isDragging","isDragReady","node","document","_injectGlobal","_registerNode","NodeClass","prototype","getClassName"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,IAAI,CAACC,EAAL,GAAU,GAA5B;;AACA,SAASC,aAAT,GAAyB;AACrB,SAAQ,OAAOC,MAAP,KAAkB,WAAlB,KACH,GAAGC,QAAH,CAAYC,IAAZ,CAAiBF,MAAjB,MAA6B,iBAA7B,IACG,GAAGC,QAAH,CAAYC,IAAZ,CAAiBF,MAAjB,MAA6B,iBAF7B,CAAR;AAGH;;AACD,OAAO,MAAMG,IAAI,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GACdA,MADc,GAEd,OAAOJ,MAAP,KAAkB,WAAlB,GACIA,MADJ,GAEI,OAAOK,iBAAP,KAA6B,WAA7B,GACIC,IADJ,GAEI,EANP;AAOP,OAAO,MAAMC,KAAK,GAAG;AACjBC,EAAAA,OAAO,EAAEL,IADQ;AAEjBM,EAAAA,OAAO,EAAE,OAFQ;AAGjBC,EAAAA,SAAS,EAAEX,aAAa,EAHP;AAIjBY,EAAAA,YAAY,EAAE,QAAQC,IAAR,CAAa,UAAUC,KAAV,EAAiB,CAAG,CAApB,CAAqBZ,QAArB,EAAb,CAJG;AAKjBa,EAAAA,cAAc,EAAE,GALC;;AAMjBC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,WAAOT,KAAK,CAACU,QAAN,GAAiBD,KAAK,GAAGpB,WAAzB,GAAuCoB,KAA9C;AACH,GARgB;;AASjBE,EAAAA,WAAW,EAAE,KATI;AAUjBC,EAAAA,oBAAoB,EAAE,IAVL;AAWjBC,EAAAA,eAAe,EAAE,IAXA;AAYjBC,EAAAA,gBAAgB,EAAE,KAZD;AAajBC,EAAAA,2BAA2B,EAAE,KAbZ;AAcjBC,EAAAA,iBAAiB,EAAE,KAdF;AAejBC,EAAAA,iBAAiB,EAAE,KAfF;AAgBjBC,EAAAA,mBAAmB,EAAE,KAhBJ;AAiBjBC,EAAAA,sBAAsB,EAAE,KAjBP;AAkBjBC,EAAAA,sBAAsB,EAAE,KAlBP;AAmBjBC,EAAAA,wBAAwB,EAAE,KAnBT;AAoBjBC,EAAAA,UAAU,EAAG,OAAO7B,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAAC8B,gBAAzC,IAA8D,CApBzD;AAqBjBC,EAAAA,YAAY,EAAE,CArBG;AAsBjBd,EAAAA,QAAQ,EAAE,IAtBO;AAuBjBe,EAAAA,YAAY,EAAE,IAvBG;AAwBjBC,EAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,CAxBI;;AAyBjBC,EAAAA,UAAU,GAAG;AACT,WAAO3B,KAAK,CAAC,IAAD,CAAL,CAAY2B,UAAnB;AACH,GA3BgB;;AA4BjBC,EAAAA,WAAW,GAAG;AACV,WAAO,CAAC,CAAC5B,KAAK,CAAC,IAAD,CAAL,CAAY6B,IAArB;AACH,GA9BgB;;AA+BjBC,EAAAA,QAAQ,EAAElC,IAAI,CAACkC,QA/BE;;AAgCjBC,EAAAA,aAAa,CAAC/B,KAAD,EAAQ;AACjBJ,IAAAA,IAAI,CAACI,KAAL,GAAaA,KAAb;AACH;;AAlCgB,CAAd;AAoCP,OAAO,MAAMgC,aAAa,GAAIC,SAAD,IAAe;AACxCjC,EAAAA,KAAK,CAACiC,SAAS,CAACC,SAAV,CAAoBC,YAApB,EAAD,CAAL,GAA4CF,SAA5C;AACH,CAFM;;AAGPjC,KAAK,CAAC+B,aAAN,CAAoB/B,KAApB","sourcesContent":["var PI_OVER_180 = Math.PI / 180;\nfunction detectBrowser() {\n    return (typeof window !== 'undefined' &&\n        ({}.toString.call(window) === '[object Window]' ||\n            {}.toString.call(window) === '[object global]'));\n}\nexport const glob = typeof global !== 'undefined'\n    ? global\n    : typeof window !== 'undefined'\n        ? window\n        : typeof WorkerGlobalScope !== 'undefined'\n            ? self\n            : {};\nexport const Konva = {\n    _global: glob,\n    version: '8.0.1',\n    isBrowser: detectBrowser(),\n    isUnminified: /param/.test(function (param) { }.toString()),\n    dblClickWindow: 400,\n    getAngle(angle) {\n        return Konva.angleDeg ? angle * PI_OVER_180 : angle;\n    },\n    enableTrace: false,\n    pointerEventsEnabled: true,\n    autoDrawEnabled: true,\n    hitOnDragEnabled: false,\n    capturePointerEventsEnabled: false,\n    _mouseListenClick: false,\n    _touchListenClick: false,\n    _pointerListenClick: false,\n    _mouseInDblClickWindow: false,\n    _touchInDblClickWindow: false,\n    _pointerInDblClickWindow: false,\n    pixelRatio: (typeof window !== 'undefined' && window.devicePixelRatio) || 1,\n    dragDistance: 3,\n    angleDeg: true,\n    showWarnings: true,\n    dragButtons: [0, 1],\n    isDragging() {\n        return Konva['DD'].isDragging;\n    },\n    isDragReady() {\n        return !!Konva['DD'].node;\n    },\n    document: glob.document,\n    _injectGlobal(Konva) {\n        glob.Konva = Konva;\n    },\n};\nexport const _registerNode = (NodeClass) => {\n    Konva[NodeClass.prototype.getClassName()] = NodeClass;\n};\nKonva._injectGlobal(Konva);\n"]},"metadata":{},"sourceType":"module"}