{"ast":null,"code":"var _jsxFileName = \"/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/src/components/Canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport GameBoard from \"./GameBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Canvas = () => {\n  _s();\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d'); //Our first draw\n\n    GameBoard(context); // context.fillStyle = '#ebebeb'\n    // context.fillRect(0, 0, context.canvas.width, context.canvas.height)\n  }, [GameBoard]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    width: \"500\",\n    height: \"500\",\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Canvas, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/src/components/Canvas.js"],"names":["React","useRef","useEffect","GameBoard","Canvas","canvas","canvasRef","current","context","getContext"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAKjBF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMG,MAAM,GAAGC,SAAS,CAACC,OAAzB;AACA,UAAMC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAhB,CAFY,CAGZ;;AACAN,IAAAA,SAAS,CAACK,OAAD,CAAT,CAJY,CAKZ;AACA;AACH,GAPQ,EAON,CAACL,SAAD,CAPM,CAAT;AASA,sBAAO;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,MAAM,EAAC,KAA3B;AAAiC,IAAA,GAAG,EAAEG;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAfD;;GAAMF,M;;KAAAA,M;AAiBN,eAAeA,MAAf","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport GameBoard from \"./GameBoard\"\n\nconst Canvas = () => {\n\n    \n\n\n    useEffect(() => {\n        const canvas = canvasRef.current\n        const context = canvas.getContext('2d')\n        //Our first draw\n        GameBoard(context)\n        // context.fillStyle = '#ebebeb'\n        // context.fillRect(0, 0, context.canvas.width, context.canvas.height)\n    }, [GameBoard])\n\n    return <canvas width=\"500\" height=\"500\" ref={canvasRef} />\n}\n\nexport default Canvas"]},"metadata":{},"sourceType":"module"}