{"ast":null,"code":"import { Util } from './Util.js';\nimport { Container } from './Container.js';\nimport { Node } from './Node.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { getBooleanValidator } from './Validators.js';\nimport { shapes } from './Shape.js';\nimport { _registerNode } from './Global.js';\nvar HASH = '#',\n    BEFORE_DRAW = 'beforeDraw',\n    DRAW = 'draw',\n    INTERSECTION_OFFSETS = [{\n  x: 0,\n  y: 0\n}, {\n  x: -1,\n  y: -1\n}, {\n  x: 1,\n  y: -1\n}, {\n  x: 1,\n  y: 1\n}, {\n  x: -1,\n  y: 1\n}],\n    INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nexport class Layer extends Container {\n  constructor(config) {\n    super(config);\n    this.canvas = new SceneCanvas();\n    this.hitCanvas = new HitCanvas({\n      pixelRatio: 1\n    });\n    this._waitingForDraw = false;\n    this.on('visibleChange.konva', this._checkVisibility);\n\n    this._checkVisibility();\n\n    this.on('imageSmoothingEnabledChange.konva', this._setSmoothEnabled);\n\n    this._setSmoothEnabled();\n  }\n\n  createPNGStream() {\n    const c = this.canvas._canvas;\n    return c.createPNGStream();\n  }\n\n  getCanvas() {\n    return this.canvas;\n  }\n\n  getNativeCanvasElement() {\n    return this.canvas._canvas;\n  }\n\n  getHitCanvas() {\n    return this.hitCanvas;\n  }\n\n  getContext() {\n    return this.getCanvas().getContext();\n  }\n\n  clear(bounds) {\n    this.getContext().clear(bounds);\n    this.getHitCanvas().getContext().clear(bounds);\n    return this;\n  }\n\n  setZIndex(index) {\n    super.setZIndex(index);\n    var stage = this.getStage();\n\n    if (stage && stage.content) {\n      stage.content.removeChild(this.getNativeCanvasElement());\n\n      if (index < stage.children.length - 1) {\n        stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n      } else {\n        stage.content.appendChild(this.getNativeCanvasElement());\n      }\n    }\n\n    return this;\n  }\n\n  moveToTop() {\n    Node.prototype.moveToTop.call(this);\n    var stage = this.getStage();\n\n    if (stage && stage.content) {\n      stage.content.removeChild(this.getNativeCanvasElement());\n      stage.content.appendChild(this.getNativeCanvasElement());\n    }\n\n    return true;\n  }\n\n  moveUp() {\n    var moved = Node.prototype.moveUp.call(this);\n\n    if (!moved) {\n      return false;\n    }\n\n    var stage = this.getStage();\n\n    if (!stage || !stage.content) {\n      return false;\n    }\n\n    stage.content.removeChild(this.getNativeCanvasElement());\n\n    if (this.index < stage.children.length - 1) {\n      stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n    } else {\n      stage.content.appendChild(this.getNativeCanvasElement());\n    }\n\n    return true;\n  }\n\n  moveDown() {\n    if (Node.prototype.moveDown.call(this)) {\n      var stage = this.getStage();\n\n      if (stage) {\n        var children = stage.children;\n\n        if (stage.content) {\n          stage.content.removeChild(this.getNativeCanvasElement());\n          stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  moveToBottom() {\n    if (Node.prototype.moveToBottom.call(this)) {\n      var stage = this.getStage();\n\n      if (stage) {\n        var children = stage.children;\n\n        if (stage.content) {\n          stage.content.removeChild(this.getNativeCanvasElement());\n          stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  getLayer() {\n    return this;\n  }\n\n  remove() {\n    var _canvas = this.getNativeCanvasElement();\n\n    Node.prototype.remove.call(this);\n\n    if (_canvas && _canvas.parentNode && Util._isInDocument(_canvas)) {\n      _canvas.parentNode.removeChild(_canvas);\n    }\n\n    return this;\n  }\n\n  getStage() {\n    return this.parent;\n  }\n\n  setSize({\n    width,\n    height\n  }) {\n    this.canvas.setSize(width, height);\n    this.hitCanvas.setSize(width, height);\n\n    this._setSmoothEnabled();\n\n    return this;\n  }\n\n  _validateAdd(child) {\n    var type = child.getType();\n\n    if (type !== 'Group' && type !== 'Shape') {\n      Util.throw('You may only add groups and shapes to a layer.');\n    }\n  }\n\n  _toKonvaCanvas(config) {\n    config = config || {};\n    config.width = config.width || this.getWidth();\n    config.height = config.height || this.getHeight();\n    config.x = config.x !== undefined ? config.x : this.x();\n    config.y = config.y !== undefined ? config.y : this.y();\n    return Node.prototype._toKonvaCanvas.call(this, config);\n  }\n\n  _checkVisibility() {\n    const visible = this.visible();\n\n    if (visible) {\n      this.canvas._canvas.style.display = 'block';\n    } else {\n      this.canvas._canvas.style.display = 'none';\n    }\n  }\n\n  _setSmoothEnabled() {\n    this.getContext()._context.imageSmoothingEnabled = this.imageSmoothingEnabled();\n  }\n\n  getWidth() {\n    if (this.parent) {\n      return this.parent.width();\n    }\n  }\n\n  setWidth() {\n    Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n  }\n\n  getHeight() {\n    if (this.parent) {\n      return this.parent.height();\n    }\n  }\n\n  setHeight() {\n    Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n  }\n\n  batchDraw() {\n    if (!this._waitingForDraw) {\n      this._waitingForDraw = true;\n      Util.requestAnimFrame(() => {\n        this.draw();\n        this._waitingForDraw = false;\n      });\n    }\n\n    return this;\n  }\n\n  getIntersection(pos) {\n    if (!this.isListening() || !this.isVisible()) {\n      return null;\n    }\n\n    var spiralSearchDistance = 1;\n    var continueSearch = false;\n\n    while (true) {\n      for (let i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n        const intersectionOffset = INTERSECTION_OFFSETS[i];\n\n        const obj = this._getIntersection({\n          x: pos.x + intersectionOffset.x * spiralSearchDistance,\n          y: pos.y + intersectionOffset.y * spiralSearchDistance\n        });\n\n        const shape = obj.shape;\n\n        if (shape) {\n          return shape;\n        }\n\n        continueSearch = !!obj.antialiased;\n\n        if (!obj.antialiased) {\n          break;\n        }\n      }\n\n      if (continueSearch) {\n        spiralSearchDistance += 1;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  _getIntersection(pos) {\n    const ratio = this.hitCanvas.pixelRatio;\n    const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n    const p3 = p[3];\n\n    if (p3 === 255) {\n      const colorKey = Util._rgbToHex(p[0], p[1], p[2]);\n\n      const shape = shapes[HASH + colorKey];\n\n      if (shape) {\n        return {\n          shape: shape\n        };\n      }\n\n      return {\n        antialiased: true\n      };\n    } else if (p3 > 0) {\n      return {\n        antialiased: true\n      };\n    }\n\n    return {};\n  }\n\n  drawScene(can, top) {\n    var layer = this.getLayer(),\n        canvas = can || layer && layer.getCanvas();\n\n    this._fire(BEFORE_DRAW, {\n      node: this\n    });\n\n    if (this.clearBeforeDraw()) {\n      canvas.getContext().clear();\n    }\n\n    Container.prototype.drawScene.call(this, canvas, top);\n\n    this._fire(DRAW, {\n      node: this\n    });\n\n    return this;\n  }\n\n  drawHit(can, top) {\n    var layer = this.getLayer(),\n        canvas = can || layer && layer.hitCanvas;\n\n    if (layer && layer.clearBeforeDraw()) {\n      layer.getHitCanvas().getContext().clear();\n    }\n\n    Container.prototype.drawHit.call(this, canvas, top);\n    return this;\n  }\n\n  enableHitGraph() {\n    this.hitGraphEnabled(true);\n    return this;\n  }\n\n  disableHitGraph() {\n    this.hitGraphEnabled(false);\n    return this;\n  }\n\n  setHitGraphEnabled(val) {\n    Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n    this.listening(val);\n  }\n\n  getHitGraphEnabled(val) {\n    Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n    return this.listening();\n  }\n\n  toggleHitCanvas() {\n    if (!this.parent || !this.parent['content']) {\n      return;\n    }\n\n    var parent = this.parent;\n    var added = !!this.hitCanvas._canvas.parentNode;\n\n    if (added) {\n      parent.content.removeChild(this.hitCanvas._canvas);\n    } else {\n      parent.content.appendChild(this.hitCanvas._canvas);\n    }\n  }\n\n}\nLayer.prototype.nodeType = 'Layer';\n\n_registerNode(Layer);\n\nFactory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory.addGetterSetter(Layer, 'hitGraphEnabled', true, getBooleanValidator());","map":{"version":3,"sources":["/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/node_modules/konva/lib/Layer.js"],"names":["Util","Container","Node","Factory","SceneCanvas","HitCanvas","getBooleanValidator","shapes","_registerNode","HASH","BEFORE_DRAW","DRAW","INTERSECTION_OFFSETS","x","y","INTERSECTION_OFFSETS_LEN","length","Layer","constructor","config","canvas","hitCanvas","pixelRatio","_waitingForDraw","on","_checkVisibility","_setSmoothEnabled","createPNGStream","c","_canvas","getCanvas","getNativeCanvasElement","getHitCanvas","getContext","clear","bounds","setZIndex","index","stage","getStage","content","removeChild","children","insertBefore","appendChild","moveToTop","prototype","call","moveUp","moved","moveDown","moveToBottom","getLayer","remove","parentNode","_isInDocument","parent","setSize","width","height","_validateAdd","child","type","getType","throw","_toKonvaCanvas","getWidth","getHeight","undefined","visible","style","display","_context","imageSmoothingEnabled","setWidth","warn","setHeight","batchDraw","requestAnimFrame","draw","getIntersection","pos","isListening","isVisible","spiralSearchDistance","continueSearch","i","intersectionOffset","obj","_getIntersection","shape","antialiased","ratio","p","context","getImageData","Math","round","data","p3","colorKey","_rgbToHex","drawScene","can","top","layer","_fire","node","clearBeforeDraw","drawHit","enableHitGraph","hitGraphEnabled","disableHitGraph","setHitGraphEnabled","val","listening","getHitGraphEnabled","toggleHitCanvas","added","nodeType","addGetterSetter"],"mappings":"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","sourcesContent":["import { Util } from './Util.js';\nimport { Container } from './Container.js';\nimport { Node } from './Node.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { getBooleanValidator } from './Validators.js';\nimport { shapes } from './Shape.js';\nimport { _registerNode } from './Global.js';\nvar HASH = '#', BEFORE_DRAW = 'beforeDraw', DRAW = 'draw', INTERSECTION_OFFSETS = [\n    { x: 0, y: 0 },\n    { x: -1, y: -1 },\n    { x: 1, y: -1 },\n    { x: 1, y: 1 },\n    { x: -1, y: 1 },\n], INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nexport class Layer extends Container {\n    constructor(config) {\n        super(config);\n        this.canvas = new SceneCanvas();\n        this.hitCanvas = new HitCanvas({\n            pixelRatio: 1,\n        });\n        this._waitingForDraw = false;\n        this.on('visibleChange.konva', this._checkVisibility);\n        this._checkVisibility();\n        this.on('imageSmoothingEnabledChange.konva', this._setSmoothEnabled);\n        this._setSmoothEnabled();\n    }\n    createPNGStream() {\n        const c = this.canvas._canvas;\n        return c.createPNGStream();\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    getNativeCanvasElement() {\n        return this.canvas._canvas;\n    }\n    getHitCanvas() {\n        return this.hitCanvas;\n    }\n    getContext() {\n        return this.getCanvas().getContext();\n    }\n    clear(bounds) {\n        this.getContext().clear(bounds);\n        this.getHitCanvas().getContext().clear(bounds);\n        return this;\n    }\n    setZIndex(index) {\n        super.setZIndex(index);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            if (index < stage.children.length - 1) {\n                stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n            }\n            else {\n                stage.content.appendChild(this.getNativeCanvasElement());\n            }\n        }\n        return this;\n    }\n    moveToTop() {\n        Node.prototype.moveToTop.call(this);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveUp() {\n        var moved = Node.prototype.moveUp.call(this);\n        if (!moved) {\n            return false;\n        }\n        var stage = this.getStage();\n        if (!stage || !stage.content) {\n            return false;\n        }\n        stage.content.removeChild(this.getNativeCanvasElement());\n        if (this.index < stage.children.length - 1) {\n            stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n        }\n        else {\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveDown() {\n        if (Node.prototype.moveDown.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (Node.prototype.moveToBottom.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    getLayer() {\n        return this;\n    }\n    remove() {\n        var _canvas = this.getNativeCanvasElement();\n        Node.prototype.remove.call(this);\n        if (_canvas && _canvas.parentNode && Util._isInDocument(_canvas)) {\n            _canvas.parentNode.removeChild(_canvas);\n        }\n        return this;\n    }\n    getStage() {\n        return this.parent;\n    }\n    setSize({ width, height }) {\n        this.canvas.setSize(width, height);\n        this.hitCanvas.setSize(width, height);\n        this._setSmoothEnabled();\n        return this;\n    }\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util.throw('You may only add groups and shapes to a layer.');\n        }\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.width = config.width || this.getWidth();\n        config.height = config.height || this.getHeight();\n        config.x = config.x !== undefined ? config.x : this.x();\n        config.y = config.y !== undefined ? config.y : this.y();\n        return Node.prototype._toKonvaCanvas.call(this, config);\n    }\n    _checkVisibility() {\n        const visible = this.visible();\n        if (visible) {\n            this.canvas._canvas.style.display = 'block';\n        }\n        else {\n            this.canvas._canvas.style.display = 'none';\n        }\n    }\n    _setSmoothEnabled() {\n        this.getContext()._context.imageSmoothingEnabled = this.imageSmoothingEnabled();\n    }\n    getWidth() {\n        if (this.parent) {\n            return this.parent.width();\n        }\n    }\n    setWidth() {\n        Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n    }\n    getHeight() {\n        if (this.parent) {\n            return this.parent.height();\n        }\n    }\n    setHeight() {\n        Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n    }\n    batchDraw() {\n        if (!this._waitingForDraw) {\n            this._waitingForDraw = true;\n            Util.requestAnimFrame(() => {\n                this.draw();\n                this._waitingForDraw = false;\n            });\n        }\n        return this;\n    }\n    getIntersection(pos) {\n        if (!this.isListening() || !this.isVisible()) {\n            return null;\n        }\n        var spiralSearchDistance = 1;\n        var continueSearch = false;\n        while (true) {\n            for (let i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n                const intersectionOffset = INTERSECTION_OFFSETS[i];\n                const obj = this._getIntersection({\n                    x: pos.x + intersectionOffset.x * spiralSearchDistance,\n                    y: pos.y + intersectionOffset.y * spiralSearchDistance,\n                });\n                const shape = obj.shape;\n                if (shape) {\n                    return shape;\n                }\n                continueSearch = !!obj.antialiased;\n                if (!obj.antialiased) {\n                    break;\n                }\n            }\n            if (continueSearch) {\n                spiralSearchDistance += 1;\n            }\n            else {\n                return null;\n            }\n        }\n    }\n    _getIntersection(pos) {\n        const ratio = this.hitCanvas.pixelRatio;\n        const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n        const p3 = p[3];\n        if (p3 === 255) {\n            const colorKey = Util._rgbToHex(p[0], p[1], p[2]);\n            const shape = shapes[HASH + colorKey];\n            if (shape) {\n                return {\n                    shape: shape,\n                };\n            }\n            return {\n                antialiased: true,\n            };\n        }\n        else if (p3 > 0) {\n            return {\n                antialiased: true,\n            };\n        }\n        return {};\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n        this._fire(BEFORE_DRAW, {\n            node: this,\n        });\n        if (this.clearBeforeDraw()) {\n            canvas.getContext().clear();\n        }\n        Container.prototype.drawScene.call(this, canvas, top);\n        this._fire(DRAW, {\n            node: this,\n        });\n        return this;\n    }\n    drawHit(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\n        if (layer && layer.clearBeforeDraw()) {\n            layer.getHitCanvas().getContext().clear();\n        }\n        Container.prototype.drawHit.call(this, canvas, top);\n        return this;\n    }\n    enableHitGraph() {\n        this.hitGraphEnabled(true);\n        return this;\n    }\n    disableHitGraph() {\n        this.hitGraphEnabled(false);\n        return this;\n    }\n    setHitGraphEnabled(val) {\n        Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        this.listening(val);\n    }\n    getHitGraphEnabled(val) {\n        Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        return this.listening();\n    }\n    toggleHitCanvas() {\n        if (!this.parent || !this.parent['content']) {\n            return;\n        }\n        var parent = this.parent;\n        var added = !!this.hitCanvas._canvas.parentNode;\n        if (added) {\n            parent.content.removeChild(this.hitCanvas._canvas);\n        }\n        else {\n            parent.content.appendChild(this.hitCanvas._canvas);\n        }\n    }\n}\nLayer.prototype.nodeType = 'Layer';\n_registerNode(Layer);\nFactory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory.addGetterSetter(Layer, 'hitGraphEnabled', true, getBooleanValidator());\n"]},"metadata":{},"sourceType":"module"}