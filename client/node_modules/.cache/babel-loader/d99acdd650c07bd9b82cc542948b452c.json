{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Konva } from '../Global.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Wedge extends Shape {\n  _sceneFunc(context) {\n    context.beginPath();\n    context.arc(0, 0, this.radius(), 0, Konva.getAngle(this.angle()), this.clockwise());\n    context.lineTo(0, 0);\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n\n  getWidth() {\n    return this.radius() * 2;\n  }\n\n  getHeight() {\n    return this.radius() * 2;\n  }\n\n  setWidth(width) {\n    this.radius(width / 2);\n  }\n\n  setHeight(height) {\n    this.radius(height / 2);\n  }\n\n}\nWedge.prototype.className = 'Wedge';\nWedge.prototype._centroid = true;\nWedge.prototype._attrsAffectingSize = ['radius'];\n\n_registerNode(Wedge);\n\nFactory.addGetterSetter(Wedge, 'radius', 0, getNumberValidator());\nFactory.addGetterSetter(Wedge, 'angle', 0, getNumberValidator());\nFactory.addGetterSetter(Wedge, 'clockwise', false);\nFactory.backCompat(Wedge, {\n  angleDeg: 'angle',\n  getAngleDeg: 'getAngle',\n  setAngleDeg: 'setAngle'\n});","map":{"version":3,"sources":["/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/node_modules/konva/lib/shapes/Wedge.js"],"names":["Factory","Shape","Konva","getNumberValidator","_registerNode","Wedge","_sceneFunc","context","beginPath","arc","radius","getAngle","angle","clockwise","lineTo","closePath","fillStrokeShape","getWidth","getHeight","setWidth","width","setHeight","height","prototype","className","_centroid","_attrsAffectingSize","addGetterSetter","backCompat","angleDeg","getAngleDeg","setAngleDeg"],"mappings":"AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,OAAO,MAAMC,KAAN,SAAoBJ,KAApB,CAA0B;AAC7BK,EAAAA,UAAU,CAACC,OAAD,EAAU;AAChBA,IAAAA,OAAO,CAACC,SAAR;AACAD,IAAAA,OAAO,CAACE,GAAR,CAAY,CAAZ,EAAe,CAAf,EAAkB,KAAKC,MAAL,EAAlB,EAAiC,CAAjC,EAAoCR,KAAK,CAACS,QAAN,CAAe,KAAKC,KAAL,EAAf,CAApC,EAAkE,KAAKC,SAAL,EAAlE;AACAN,IAAAA,OAAO,CAACO,MAAR,CAAe,CAAf,EAAkB,CAAlB;AACAP,IAAAA,OAAO,CAACQ,SAAR;AACAR,IAAAA,OAAO,CAACS,eAAR,CAAwB,IAAxB;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKP,MAAL,KAAgB,CAAvB;AACH;;AACDQ,EAAAA,SAAS,GAAG;AACR,WAAO,KAAKR,MAAL,KAAgB,CAAvB;AACH;;AACDS,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,SAAKV,MAAL,CAAYU,KAAK,GAAG,CAApB;AACH;;AACDC,EAAAA,SAAS,CAACC,MAAD,EAAS;AACd,SAAKZ,MAAL,CAAYY,MAAM,GAAG,CAArB;AACH;;AAnB4B;AAqBjCjB,KAAK,CAACkB,SAAN,CAAgBC,SAAhB,GAA4B,OAA5B;AACAnB,KAAK,CAACkB,SAAN,CAAgBE,SAAhB,GAA4B,IAA5B;AACApB,KAAK,CAACkB,SAAN,CAAgBG,mBAAhB,GAAsC,CAAC,QAAD,CAAtC;;AACAtB,aAAa,CAACC,KAAD,CAAb;;AACAL,OAAO,CAAC2B,eAAR,CAAwBtB,KAAxB,EAA+B,QAA/B,EAAyC,CAAzC,EAA4CF,kBAAkB,EAA9D;AACAH,OAAO,CAAC2B,eAAR,CAAwBtB,KAAxB,EAA+B,OAA/B,EAAwC,CAAxC,EAA2CF,kBAAkB,EAA7D;AACAH,OAAO,CAAC2B,eAAR,CAAwBtB,KAAxB,EAA+B,WAA/B,EAA4C,KAA5C;AACAL,OAAO,CAAC4B,UAAR,CAAmBvB,KAAnB,EAA0B;AACtBwB,EAAAA,QAAQ,EAAE,OADY;AAEtBC,EAAAA,WAAW,EAAE,UAFS;AAGtBC,EAAAA,WAAW,EAAE;AAHS,CAA1B","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Konva } from '../Global.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Wedge extends Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.radius(), 0, Konva.getAngle(this.angle()), this.clockwise());\n        context.lineTo(0, 0);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        this.radius(width / 2);\n    }\n    setHeight(height) {\n        this.radius(height / 2);\n    }\n}\nWedge.prototype.className = 'Wedge';\nWedge.prototype._centroid = true;\nWedge.prototype._attrsAffectingSize = ['radius'];\n_registerNode(Wedge);\nFactory.addGetterSetter(Wedge, 'radius', 0, getNumberValidator());\nFactory.addGetterSetter(Wedge, 'angle', 0, getNumberValidator());\nFactory.addGetterSetter(Wedge, 'clockwise', false);\nFactory.backCompat(Wedge, {\n    angleDeg: 'angle',\n    getAngleDeg: 'getAngle',\n    setAngleDeg: 'setAngle',\n});\n"]},"metadata":{},"sourceType":"module"}