{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Line } from './Line.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nimport { Path } from './Path.js';\nexport class Arrow extends Line {\n  _sceneFunc(ctx) {\n    super._sceneFunc(ctx);\n\n    var PI2 = Math.PI * 2;\n    var points = this.points();\n    var tp = points;\n    var fromTension = this.tension() !== 0 && points.length > 4;\n\n    if (fromTension) {\n      tp = this.getTensionPoints();\n    }\n\n    var length = this.pointerLength();\n    var n = points.length;\n    var dx, dy;\n\n    if (fromTension) {\n      const lp = [tp[tp.length - 4], tp[tp.length - 3], tp[tp.length - 2], tp[tp.length - 1], points[n - 2], points[n - 1]];\n      const lastLength = Path.calcLength(tp[tp.length - 4], tp[tp.length - 3], 'C', lp);\n      const previous = Path.getPointOnQuadraticBezier(Math.min(1, 1 - length / lastLength), lp[0], lp[1], lp[2], lp[3], lp[4], lp[5]);\n      dx = points[n - 2] - previous.x;\n      dy = points[n - 1] - previous.y;\n    } else {\n      dx = points[n - 2] - points[n - 4];\n      dy = points[n - 1] - points[n - 3];\n    }\n\n    var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n    var width = this.pointerWidth();\n\n    if (this.pointerAtEnding()) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.translate(points[n - 2], points[n - 1]);\n      ctx.rotate(radians);\n      ctx.moveTo(0, 0);\n      ctx.lineTo(-length, width / 2);\n      ctx.lineTo(-length, -width / 2);\n      ctx.closePath();\n      ctx.restore();\n    }\n\n    if (this.pointerAtBeginning()) {\n      ctx.save();\n      ctx.translate(points[0], points[1]);\n\n      if (fromTension) {\n        dx = (tp[0] + tp[2]) / 2 - points[0];\n        dy = (tp[1] + tp[3]) / 2 - points[1];\n      } else {\n        dx = points[2] - points[0];\n        dy = points[3] - points[1];\n      }\n\n      ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n      ctx.moveTo(0, 0);\n      ctx.lineTo(-length, width / 2);\n      ctx.lineTo(-length, -width / 2);\n      ctx.closePath();\n      ctx.restore();\n    }\n\n    var isDashEnabled = this.dashEnabled();\n\n    if (isDashEnabled) {\n      this.attrs.dashEnabled = false;\n      ctx.setLineDash([]);\n    }\n\n    ctx.fillStrokeShape(this);\n\n    if (isDashEnabled) {\n      this.attrs.dashEnabled = true;\n    }\n  }\n\n  getSelfRect() {\n    const lineRect = super.getSelfRect();\n    const offset = this.pointerWidth() / 2;\n    return {\n      x: lineRect.x - offset,\n      y: lineRect.y - offset,\n      width: lineRect.width + offset * 2,\n      height: lineRect.height + offset * 2\n    };\n  }\n\n}\nArrow.prototype.className = 'Arrow';\n\n_registerNode(Arrow);\n\nFactory.addGetterSetter(Arrow, 'pointerLength', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerWidth', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerAtBeginning', false);\nFactory.addGetterSetter(Arrow, 'pointerAtEnding', true);","map":{"version":3,"sources":["/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/node_modules/konva/lib/shapes/Arrow.js"],"names":["Factory","Line","getNumberValidator","_registerNode","Path","Arrow","_sceneFunc","ctx","PI2","Math","PI","points","tp","fromTension","tension","length","getTensionPoints","pointerLength","n","dx","dy","lp","lastLength","calcLength","previous","getPointOnQuadraticBezier","min","x","y","radians","atan2","width","pointerWidth","pointerAtEnding","save","beginPath","translate","rotate","moveTo","lineTo","closePath","restore","pointerAtBeginning","isDashEnabled","dashEnabled","attrs","setLineDash","fillStrokeShape","getSelfRect","lineRect","offset","height","prototype","className","addGetterSetter"],"mappings":"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","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Line } from './Line.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nimport { Path } from './Path.js';\nexport class Arrow extends Line {\n    _sceneFunc(ctx) {\n        super._sceneFunc(ctx);\n        var PI2 = Math.PI * 2;\n        var points = this.points();\n        var tp = points;\n        var fromTension = this.tension() !== 0 && points.length > 4;\n        if (fromTension) {\n            tp = this.getTensionPoints();\n        }\n        var length = this.pointerLength();\n        var n = points.length;\n        var dx, dy;\n        if (fromTension) {\n            const lp = [\n                tp[tp.length - 4],\n                tp[tp.length - 3],\n                tp[tp.length - 2],\n                tp[tp.length - 1],\n                points[n - 2],\n                points[n - 1],\n            ];\n            const lastLength = Path.calcLength(tp[tp.length - 4], tp[tp.length - 3], 'C', lp);\n            const previous = Path.getPointOnQuadraticBezier(Math.min(1, 1 - length / lastLength), lp[0], lp[1], lp[2], lp[3], lp[4], lp[5]);\n            dx = points[n - 2] - previous.x;\n            dy = points[n - 1] - previous.y;\n        }\n        else {\n            dx = points[n - 2] - points[n - 4];\n            dy = points[n - 1] - points[n - 3];\n        }\n        var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n        var width = this.pointerWidth();\n        if (this.pointerAtEnding()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[n - 2], points[n - 1]);\n            ctx.rotate(radians);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n        }\n        if (this.pointerAtBeginning()) {\n            ctx.save();\n            ctx.translate(points[0], points[1]);\n            if (fromTension) {\n                dx = (tp[0] + tp[2]) / 2 - points[0];\n                dy = (tp[1] + tp[3]) / 2 - points[1];\n            }\n            else {\n                dx = points[2] - points[0];\n                dy = points[3] - points[1];\n            }\n            ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n        }\n        var isDashEnabled = this.dashEnabled();\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = false;\n            ctx.setLineDash([]);\n        }\n        ctx.fillStrokeShape(this);\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = true;\n        }\n    }\n    getSelfRect() {\n        const lineRect = super.getSelfRect();\n        const offset = this.pointerWidth() / 2;\n        return {\n            x: lineRect.x - offset,\n            y: lineRect.y - offset,\n            width: lineRect.width + offset * 2,\n            height: lineRect.height + offset * 2,\n        };\n    }\n}\nArrow.prototype.className = 'Arrow';\n_registerNode(Arrow);\nFactory.addGetterSetter(Arrow, 'pointerLength', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerWidth', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerAtBeginning', false);\nFactory.addGetterSetter(Arrow, 'pointerAtEnding', true);\n"]},"metadata":{},"sourceType":"module"}