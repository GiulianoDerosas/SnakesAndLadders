{"ast":null,"code":"import { Util, Transform } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { Konva } from './Global.js';\nimport { DD } from './DragAndDrop.js';\nimport { getNumberValidator, getStringValidator, getBooleanValidator } from './Validators.js';\nvar ABSOLUTE_OPACITY = 'absoluteOpacity',\n    ALL_LISTENERS = 'allEventListeners',\n    ABSOLUTE_TRANSFORM = 'absoluteTransform',\n    ABSOLUTE_SCALE = 'absoluteScale',\n    CANVAS = 'canvas',\n    CHANGE = 'Change',\n    CHILDREN = 'children',\n    KONVA = 'konva',\n    LISTENING = 'listening',\n    MOUSEENTER = 'mouseenter',\n    MOUSELEAVE = 'mouseleave',\n    NAME = 'name',\n    SET = 'set',\n    SHAPE = 'Shape',\n    SPACE = ' ',\n    STAGE = 'stage',\n    TRANSFORM = 'transform',\n    UPPER_STAGE = 'Stage',\n    VISIBLE = 'visible',\n    TRANSFORM_CHANGE_STR = ['xChange.konva', 'yChange.konva', 'scaleXChange.konva', 'scaleYChange.konva', 'skewXChange.konva', 'skewYChange.konva', 'rotationChange.konva', 'offsetXChange.konva', 'offsetYChange.konva', 'transformsEnabledChange.konva'].join(SPACE);\nlet idCounter = 1;\nexport class Node {\n  constructor(config) {\n    this._id = idCounter++;\n    this.eventListeners = {};\n    this.attrs = {};\n    this.index = 0;\n    this._allEventListeners = null;\n    this.parent = null;\n    this._cache = new Map();\n    this._attachedDepsListeners = new Map();\n    this._lastPos = null;\n    this._batchingTransformChange = false;\n    this._needClearTransformCache = false;\n    this._filterUpToDate = false;\n    this._isUnderCache = false;\n    this._dragEventId = null;\n    this._shouldFireChangeEvents = false;\n    this.setAttrs(config);\n    this._shouldFireChangeEvents = true;\n  }\n\n  hasChildren() {\n    return false;\n  }\n\n  _clearCache(attr) {\n    if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) && this._cache.get(attr)) {\n      this._cache.get(attr).dirty = true;\n    } else if (attr) {\n      this._cache.delete(attr);\n    } else {\n      this._cache.clear();\n    }\n  }\n\n  _getCache(attr, privateGetter) {\n    var cache = this._cache.get(attr);\n\n    var isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\n    var invalid = cache === undefined || isTransform && cache.dirty === true;\n\n    if (invalid) {\n      cache = privateGetter.call(this);\n\n      this._cache.set(attr, cache);\n    }\n\n    return cache;\n  }\n\n  _calculate(name, deps, getter) {\n    if (!this._attachedDepsListeners.get(name)) {\n      const depsString = deps.map(dep => dep + 'Change.konva').join(SPACE);\n      this.on(depsString, () => {\n        this._clearCache(name);\n      });\n\n      this._attachedDepsListeners.set(name, true);\n    }\n\n    return this._getCache(name, getter);\n  }\n\n  _getCanvasCache() {\n    return this._cache.get(CANVAS);\n  }\n\n  _clearSelfAndDescendantCache(attr) {\n    this._clearCache(attr);\n\n    if (attr === ABSOLUTE_TRANSFORM) {\n      this.fire('absoluteTransformChange');\n    }\n  }\n\n  clearCache() {\n    this._cache.delete(CANVAS);\n\n    this._clearSelfAndDescendantCache();\n\n    this._requestDraw();\n\n    return this;\n  }\n\n  cache(config) {\n    var conf = config || {};\n    var rect = {};\n\n    if (conf.x === undefined || conf.y === undefined || conf.width === undefined || conf.height === undefined) {\n      rect = this.getClientRect({\n        skipTransform: true,\n        relativeTo: this.getParent()\n      });\n    }\n\n    var width = Math.ceil(conf.width || rect.width),\n        height = Math.ceil(conf.height || rect.height),\n        pixelRatio = conf.pixelRatio,\n        x = conf.x === undefined ? rect.x : conf.x,\n        y = conf.y === undefined ? rect.y : conf.y,\n        offset = conf.offset || 0,\n        drawBorder = conf.drawBorder || false,\n        hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n\n    if (!width || !height) {\n      Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\n      return;\n    }\n\n    width += offset * 2;\n    height += offset * 2;\n    x -= offset;\n    y -= offset;\n    var cachedSceneCanvas = new SceneCanvas({\n      pixelRatio: pixelRatio,\n      width: width,\n      height: height\n    }),\n        cachedFilterCanvas = new SceneCanvas({\n      pixelRatio: pixelRatio,\n      width: 0,\n      height: 0\n    }),\n        cachedHitCanvas = new HitCanvas({\n      pixelRatio: hitCanvasPixelRatio,\n      width: width,\n      height: height\n    }),\n        sceneContext = cachedSceneCanvas.getContext(),\n        hitContext = cachedHitCanvas.getContext();\n    cachedHitCanvas.isCache = true;\n    cachedSceneCanvas.isCache = true;\n\n    this._cache.delete(CANVAS);\n\n    this._filterUpToDate = false;\n\n    if (conf.imageSmoothingEnabled === false) {\n      cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n      cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n    }\n\n    sceneContext.save();\n    hitContext.save();\n    sceneContext.translate(-x, -y);\n    hitContext.translate(-x, -y);\n    this._isUnderCache = true;\n\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\n    this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n\n    this.drawScene(cachedSceneCanvas, this);\n    this.drawHit(cachedHitCanvas, this);\n    this._isUnderCache = false;\n    sceneContext.restore();\n    hitContext.restore();\n\n    if (drawBorder) {\n      sceneContext.save();\n      sceneContext.beginPath();\n      sceneContext.rect(0, 0, width, height);\n      sceneContext.closePath();\n      sceneContext.setAttr('strokeStyle', 'red');\n      sceneContext.setAttr('lineWidth', 5);\n      sceneContext.stroke();\n      sceneContext.restore();\n    }\n\n    this._cache.set(CANVAS, {\n      scene: cachedSceneCanvas,\n      filter: cachedFilterCanvas,\n      hit: cachedHitCanvas,\n      x: x,\n      y: y\n    });\n\n    this._requestDraw();\n\n    return this;\n  }\n\n  isCached() {\n    return this._cache.has(CANVAS);\n  }\n\n  getClientRect(config) {\n    throw new Error('abstract \"getClientRect\" method call');\n  }\n\n  _transformedRect(rect, top) {\n    var points = [{\n      x: rect.x,\n      y: rect.y\n    }, {\n      x: rect.x + rect.width,\n      y: rect.y\n    }, {\n      x: rect.x + rect.width,\n      y: rect.y + rect.height\n    }, {\n      x: rect.x,\n      y: rect.y + rect.height\n    }];\n    var minX, minY, maxX, maxY;\n    var trans = this.getAbsoluteTransform(top);\n    points.forEach(function (point) {\n      var transformed = trans.point(point);\n\n      if (minX === undefined) {\n        minX = maxX = transformed.x;\n        minY = maxY = transformed.y;\n      }\n\n      minX = Math.min(minX, transformed.x);\n      minY = Math.min(minY, transformed.y);\n      maxX = Math.max(maxX, transformed.x);\n      maxY = Math.max(maxY, transformed.y);\n    });\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n\n  _drawCachedSceneCanvas(context) {\n    context.save();\n\n    context._applyOpacity(this);\n\n    context._applyGlobalCompositeOperation(this);\n\n    const canvasCache = this._getCanvasCache();\n\n    context.translate(canvasCache.x, canvasCache.y);\n\n    var cacheCanvas = this._getCachedSceneCanvas();\n\n    var ratio = cacheCanvas.pixelRatio;\n    context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n    context.restore();\n  }\n\n  _drawCachedHitCanvas(context) {\n    var canvasCache = this._getCanvasCache(),\n        hitCanvas = canvasCache.hit;\n\n    context.save();\n    context.translate(canvasCache.x, canvasCache.y);\n    context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n    context.restore();\n  }\n\n  _getCachedSceneCanvas() {\n    var filters = this.filters(),\n        cachedCanvas = this._getCanvasCache(),\n        sceneCanvas = cachedCanvas.scene,\n        filterCanvas = cachedCanvas.filter,\n        filterContext = filterCanvas.getContext(),\n        len,\n        imageData,\n        n,\n        filter;\n\n    if (filters) {\n      if (!this._filterUpToDate) {\n        var ratio = sceneCanvas.pixelRatio;\n        filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n\n        try {\n          len = filters.length;\n          filterContext.clear();\n          filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n          imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n\n          for (n = 0; n < len; n++) {\n            filter = filters[n];\n\n            if (typeof filter !== 'function') {\n              Util.error('Filter should be type of function, but got ' + typeof filter + ' instead. Please check correct filters');\n              continue;\n            }\n\n            filter.call(this, imageData);\n            filterContext.putImageData(imageData, 0, 0);\n          }\n        } catch (e) {\n          Util.error('Unable to apply filter. ' + e.message + ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n        }\n\n        this._filterUpToDate = true;\n      }\n\n      return filterCanvas;\n    }\n\n    return sceneCanvas;\n  }\n\n  on(evtStr, handler) {\n    this._cache && this._cache.delete(ALL_LISTENERS);\n\n    if (arguments.length === 3) {\n      return this._delegate.apply(this, arguments);\n    }\n\n    var events = evtStr.split(SPACE),\n        len = events.length,\n        n,\n        event,\n        parts,\n        baseEvent,\n        name;\n\n    for (n = 0; n < len; n++) {\n      event = events[n];\n      parts = event.split('.');\n      baseEvent = parts[0];\n      name = parts[1] || '';\n\n      if (!this.eventListeners[baseEvent]) {\n        this.eventListeners[baseEvent] = [];\n      }\n\n      this.eventListeners[baseEvent].push({\n        name: name,\n        handler: handler\n      });\n    }\n\n    return this;\n  }\n\n  off(evtStr, callback) {\n    var events = (evtStr || '').split(SPACE),\n        len = events.length,\n        n,\n        t,\n        event,\n        parts,\n        baseEvent,\n        name;\n    this._cache && this._cache.delete(ALL_LISTENERS);\n\n    if (!evtStr) {\n      for (t in this.eventListeners) {\n        this._off(t);\n      }\n    }\n\n    for (n = 0; n < len; n++) {\n      event = events[n];\n      parts = event.split('.');\n      baseEvent = parts[0];\n      name = parts[1];\n\n      if (baseEvent) {\n        if (this.eventListeners[baseEvent]) {\n          this._off(baseEvent, name, callback);\n        }\n      } else {\n        for (t in this.eventListeners) {\n          this._off(t, name, callback);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  dispatchEvent(evt) {\n    var e = {\n      target: this,\n      type: evt.type,\n      evt: evt\n    };\n    this.fire(evt.type, e);\n    return this;\n  }\n\n  addEventListener(type, handler) {\n    this.on(type, function (evt) {\n      handler.call(this, evt.evt);\n    });\n    return this;\n  }\n\n  removeEventListener(type) {\n    this.off(type);\n    return this;\n  }\n\n  _delegate(event, selector, handler) {\n    var stopNode = this;\n    this.on(event, function (evt) {\n      var targets = evt.target.findAncestors(selector, true, stopNode);\n\n      for (var i = 0; i < targets.length; i++) {\n        evt = Util.cloneObject(evt);\n        evt.currentTarget = targets[i];\n        handler.call(targets[i], evt);\n      }\n    });\n  }\n\n  remove() {\n    if (this.isDragging()) {\n      this.stopDrag();\n    }\n\n    DD._dragElements.delete(this._id);\n\n    this._remove();\n\n    return this;\n  }\n\n  _clearCaches() {\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\n    this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n\n    this._clearSelfAndDescendantCache(STAGE);\n\n    this._clearSelfAndDescendantCache(VISIBLE);\n\n    this._clearSelfAndDescendantCache(LISTENING);\n  }\n\n  _remove() {\n    this._clearCaches();\n\n    var parent = this.getParent();\n\n    if (parent && parent.children) {\n      parent.children.splice(this.index, 1);\n\n      parent._setChildrenIndices();\n\n      this.parent = null;\n    }\n  }\n\n  destroy() {\n    this.remove();\n    return this;\n  }\n\n  getAttr(attr) {\n    var method = 'get' + Util._capitalize(attr);\n\n    if (Util._isFunction(this[method])) {\n      return this[method]();\n    }\n\n    return this.attrs[attr];\n  }\n\n  getAncestors() {\n    var parent = this.getParent(),\n        ancestors = [];\n\n    while (parent) {\n      ancestors.push(parent);\n      parent = parent.getParent();\n    }\n\n    return ancestors;\n  }\n\n  getAttrs() {\n    return this.attrs || {};\n  }\n\n  setAttrs(config) {\n    this._batchTransformChanges(() => {\n      var key, method;\n\n      if (!config) {\n        return this;\n      }\n\n      for (key in config) {\n        if (key === CHILDREN) {\n          continue;\n        }\n\n        method = SET + Util._capitalize(key);\n\n        if (Util._isFunction(this[method])) {\n          this[method](config[key]);\n        } else {\n          this._setAttr(key, config[key]);\n        }\n      }\n    });\n\n    return this;\n  }\n\n  isListening() {\n    return this._getCache(LISTENING, this._isListening);\n  }\n\n  _isListening(relativeTo) {\n    const listening = this.listening();\n\n    if (!listening) {\n      return false;\n    }\n\n    const parent = this.getParent();\n\n    if (parent && parent !== relativeTo && this !== relativeTo) {\n      return parent._isListening(relativeTo);\n    } else {\n      return true;\n    }\n  }\n\n  isVisible() {\n    return this._getCache(VISIBLE, this._isVisible);\n  }\n\n  _isVisible(relativeTo) {\n    const visible = this.visible();\n\n    if (!visible) {\n      return false;\n    }\n\n    const parent = this.getParent();\n\n    if (parent && parent !== relativeTo && this !== relativeTo) {\n      return parent._isVisible(relativeTo);\n    } else {\n      return true;\n    }\n  }\n\n  shouldDrawHit(top, skipDragCheck = false) {\n    if (top) {\n      return this._isVisible(top) && this._isListening(top);\n    }\n\n    var layer = this.getLayer();\n    var layerUnderDrag = false;\n\n    DD._dragElements.forEach(elem => {\n      if (elem.dragStatus !== 'dragging') {\n        return;\n      } else if (elem.node.nodeType === 'Stage') {\n        layerUnderDrag = true;\n      } else if (elem.node.getLayer() === layer) {\n        layerUnderDrag = true;\n      }\n    });\n\n    var dragSkip = !skipDragCheck && !Konva.hitOnDragEnabled && layerUnderDrag;\n    return this.isListening() && this.isVisible() && !dragSkip;\n  }\n\n  show() {\n    this.visible(true);\n    return this;\n  }\n\n  hide() {\n    this.visible(false);\n    return this;\n  }\n\n  getZIndex() {\n    return this.index || 0;\n  }\n\n  getAbsoluteZIndex() {\n    var depth = this.getDepth(),\n        that = this,\n        index = 0,\n        nodes,\n        len,\n        n,\n        child;\n\n    function addChildren(children) {\n      nodes = [];\n      len = children.length;\n\n      for (n = 0; n < len; n++) {\n        child = children[n];\n        index++;\n\n        if (child.nodeType !== SHAPE) {\n          nodes = nodes.concat(child.getChildren().slice());\n        }\n\n        if (child._id === that._id) {\n          n = len;\n        }\n      }\n\n      if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n        addChildren(nodes);\n      }\n    }\n\n    if (that.nodeType !== UPPER_STAGE) {\n      addChildren(that.getStage().getChildren());\n    }\n\n    return index;\n  }\n\n  getDepth() {\n    var depth = 0,\n        parent = this.parent;\n\n    while (parent) {\n      depth++;\n      parent = parent.parent;\n    }\n\n    return depth;\n  }\n\n  _batchTransformChanges(func) {\n    this._batchingTransformChange = true;\n    func();\n    this._batchingTransformChange = false;\n\n    if (this._needClearTransformCache) {\n      this._clearCache(TRANSFORM);\n\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n    }\n\n    this._needClearTransformCache = false;\n  }\n\n  setPosition(pos) {\n    this._batchTransformChanges(() => {\n      this.x(pos.x);\n      this.y(pos.y);\n    });\n\n    return this;\n  }\n\n  getPosition() {\n    return {\n      x: this.x(),\n      y: this.y()\n    };\n  }\n\n  getRelativePointerPosition() {\n    if (!this.getStage()) {\n      return null;\n    }\n\n    var pos = this.getStage().getPointerPosition();\n\n    if (!pos) {\n      return null;\n    }\n\n    var transform = this.getAbsoluteTransform().copy();\n    transform.invert();\n    return transform.point(pos);\n  }\n\n  getAbsolutePosition(top) {\n    let haveCachedParent = false;\n    let parent = this.parent;\n\n    while (parent) {\n      if (parent.isCached()) {\n        haveCachedParent = true;\n        break;\n      }\n\n      parent = parent.parent;\n    }\n\n    if (haveCachedParent && !top) {\n      top = true;\n    }\n\n    var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(),\n        absoluteTransform = new Transform(),\n        offset = this.offset();\n    absoluteTransform.m = absoluteMatrix.slice();\n    absoluteTransform.translate(offset.x, offset.y);\n    return absoluteTransform.getTranslation();\n  }\n\n  setAbsolutePosition(pos) {\n    var origTrans = this._clearTransform();\n\n    this.attrs.x = origTrans.x;\n    this.attrs.y = origTrans.y;\n    delete origTrans.x;\n    delete origTrans.y;\n\n    this._clearCache(TRANSFORM);\n\n    var it = this._getAbsoluteTransform().copy();\n\n    it.invert();\n    it.translate(pos.x, pos.y);\n    pos = {\n      x: this.attrs.x + it.getTranslation().x,\n      y: this.attrs.y + it.getTranslation().y\n    };\n\n    this._setTransform(origTrans);\n\n    this.setPosition({\n      x: pos.x,\n      y: pos.y\n    });\n\n    this._clearCache(TRANSFORM);\n\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\n    return this;\n  }\n\n  _setTransform(trans) {\n    var key;\n\n    for (key in trans) {\n      this.attrs[key] = trans[key];\n    }\n  }\n\n  _clearTransform() {\n    var trans = {\n      x: this.x(),\n      y: this.y(),\n      rotation: this.rotation(),\n      scaleX: this.scaleX(),\n      scaleY: this.scaleY(),\n      offsetX: this.offsetX(),\n      offsetY: this.offsetY(),\n      skewX: this.skewX(),\n      skewY: this.skewY()\n    };\n    this.attrs.x = 0;\n    this.attrs.y = 0;\n    this.attrs.rotation = 0;\n    this.attrs.scaleX = 1;\n    this.attrs.scaleY = 1;\n    this.attrs.offsetX = 0;\n    this.attrs.offsetY = 0;\n    this.attrs.skewX = 0;\n    this.attrs.skewY = 0;\n    return trans;\n  }\n\n  move(change) {\n    var changeX = change.x,\n        changeY = change.y,\n        x = this.x(),\n        y = this.y();\n\n    if (changeX !== undefined) {\n      x += changeX;\n    }\n\n    if (changeY !== undefined) {\n      y += changeY;\n    }\n\n    this.setPosition({\n      x: x,\n      y: y\n    });\n    return this;\n  }\n\n  _eachAncestorReverse(func, top) {\n    var family = [],\n        parent = this.getParent(),\n        len,\n        n;\n\n    if (top && top._id === this._id) {\n      return;\n    }\n\n    family.unshift(this);\n\n    while (parent && (!top || parent._id !== top._id)) {\n      family.unshift(parent);\n      parent = parent.parent;\n    }\n\n    len = family.length;\n\n    for (n = 0; n < len; n++) {\n      func(family[n]);\n    }\n  }\n\n  rotate(theta) {\n    this.rotation(this.rotation() + theta);\n    return this;\n  }\n\n  moveToTop() {\n    if (!this.parent) {\n      Util.warn('Node has no parent. moveToTop function is ignored.');\n      return false;\n    }\n\n    var index = this.index;\n    this.parent.children.splice(index, 1);\n    this.parent.children.push(this);\n\n    this.parent._setChildrenIndices();\n\n    return true;\n  }\n\n  moveUp() {\n    if (!this.parent) {\n      Util.warn('Node has no parent. moveUp function is ignored.');\n      return false;\n    }\n\n    var index = this.index,\n        len = this.parent.getChildren().length;\n\n    if (index < len - 1) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.splice(index + 1, 0, this);\n\n      this.parent._setChildrenIndices();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  moveDown() {\n    if (!this.parent) {\n      Util.warn('Node has no parent. moveDown function is ignored.');\n      return false;\n    }\n\n    var index = this.index;\n\n    if (index > 0) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.splice(index - 1, 0, this);\n\n      this.parent._setChildrenIndices();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  moveToBottom() {\n    if (!this.parent) {\n      Util.warn('Node has no parent. moveToBottom function is ignored.');\n      return false;\n    }\n\n    var index = this.index;\n\n    if (index > 0) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.unshift(this);\n\n      this.parent._setChildrenIndices();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  setZIndex(zIndex) {\n    if (!this.parent) {\n      Util.warn('Node has no parent. zIndex parameter is ignored.');\n      return this;\n    }\n\n    if (zIndex < 0 || zIndex >= this.parent.children.length) {\n      Util.warn('Unexpected value ' + zIndex + ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' + (this.parent.children.length - 1) + '.');\n    }\n\n    var index = this.index;\n    this.parent.children.splice(index, 1);\n    this.parent.children.splice(zIndex, 0, this);\n\n    this.parent._setChildrenIndices();\n\n    return this;\n  }\n\n  getAbsoluteOpacity() {\n    return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n  }\n\n  _getAbsoluteOpacity() {\n    var absOpacity = this.opacity();\n    var parent = this.getParent();\n\n    if (parent && !parent._isUnderCache) {\n      absOpacity *= parent.getAbsoluteOpacity();\n    }\n\n    return absOpacity;\n  }\n\n  moveTo(newContainer) {\n    if (this.getParent() !== newContainer) {\n      this._remove();\n\n      newContainer.add(this);\n    }\n\n    return this;\n  }\n\n  toObject() {\n    var obj = {},\n        attrs = this.getAttrs(),\n        key,\n        val,\n        getter,\n        defaultValue,\n        nonPlainObject;\n    obj.attrs = {};\n\n    for (key in attrs) {\n      val = attrs[key];\n      nonPlainObject = Util.isObject(val) && !Util._isPlainObject(val) && !Util._isArray(val);\n\n      if (nonPlainObject) {\n        continue;\n      }\n\n      getter = typeof this[key] === 'function' && this[key];\n      delete attrs[key];\n      defaultValue = getter ? getter.call(this) : null;\n      attrs[key] = val;\n\n      if (defaultValue !== val) {\n        obj.attrs[key] = val;\n      }\n    }\n\n    obj.className = this.getClassName();\n    return Util._prepareToStringify(obj);\n  }\n\n  toJSON() {\n    return JSON.stringify(this.toObject());\n  }\n\n  getParent() {\n    return this.parent;\n  }\n\n  findAncestors(selector, includeSelf, stopNode) {\n    var res = [];\n\n    if (includeSelf && this._isMatch(selector)) {\n      res.push(this);\n    }\n\n    var ancestor = this.parent;\n\n    while (ancestor) {\n      if (ancestor === stopNode) {\n        return res;\n      }\n\n      if (ancestor._isMatch(selector)) {\n        res.push(ancestor);\n      }\n\n      ancestor = ancestor.parent;\n    }\n\n    return res;\n  }\n\n  isAncestorOf(node) {\n    return false;\n  }\n\n  findAncestor(selector, includeSelf, stopNode) {\n    return this.findAncestors(selector, includeSelf, stopNode)[0];\n  }\n\n  _isMatch(selector) {\n    if (!selector) {\n      return false;\n    }\n\n    if (typeof selector === 'function') {\n      return selector(this);\n    }\n\n    var selectorArr = selector.replace(/ /g, '').split(','),\n        len = selectorArr.length,\n        n,\n        sel;\n\n    for (n = 0; n < len; n++) {\n      sel = selectorArr[n];\n\n      if (!Util.isValidSelector(sel)) {\n        Util.warn('Selector \"' + sel + '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n        Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n        Util.warn('Konva is awesome, right?');\n      }\n\n      if (sel.charAt(0) === '#') {\n        if (this.id() === sel.slice(1)) {\n          return true;\n        }\n      } else if (sel.charAt(0) === '.') {\n        if (this.hasName(sel.slice(1))) {\n          return true;\n        }\n      } else if (this.className === sel || this.nodeType === sel) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getLayer() {\n    var parent = this.getParent();\n    return parent ? parent.getLayer() : null;\n  }\n\n  getStage() {\n    return this._getCache(STAGE, this._getStage);\n  }\n\n  _getStage() {\n    var parent = this.getParent();\n\n    if (parent) {\n      return parent.getStage();\n    } else {\n      return undefined;\n    }\n  }\n\n  fire(eventType, evt = {}, bubble) {\n    evt.target = evt.target || this;\n\n    if (bubble) {\n      this._fireAndBubble(eventType, evt);\n    } else {\n      this._fire(eventType, evt);\n    }\n\n    return this;\n  }\n\n  getAbsoluteTransform(top) {\n    if (top) {\n      return this._getAbsoluteTransform(top);\n    } else {\n      return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n    }\n  }\n\n  _getAbsoluteTransform(top) {\n    var at;\n\n    if (top) {\n      at = new Transform();\n\n      this._eachAncestorReverse(function (node) {\n        var transformsEnabled = node.transformsEnabled();\n\n        if (transformsEnabled === 'all') {\n          at.multiply(node.getTransform());\n        } else if (transformsEnabled === 'position') {\n          at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n        }\n      }, top);\n\n      return at;\n    } else {\n      at = this._cache.get(ABSOLUTE_TRANSFORM) || new Transform();\n\n      if (this.parent) {\n        this.parent.getAbsoluteTransform().copyInto(at);\n      } else {\n        at.reset();\n      }\n\n      var transformsEnabled = this.transformsEnabled();\n\n      if (transformsEnabled === 'all') {\n        at.multiply(this.getTransform());\n      } else if (transformsEnabled === 'position') {\n        const x = this.attrs.x || 0;\n        const y = this.attrs.y || 0;\n        const offsetX = this.attrs.offsetX || 0;\n        const offsetY = this.attrs.offsetY || 0;\n        at.translate(x - offsetX, y - offsetY);\n      }\n\n      at.dirty = false;\n      return at;\n    }\n  }\n\n  getAbsoluteScale(top) {\n    var parent = this;\n\n    while (parent) {\n      if (parent._isUnderCache) {\n        top = parent;\n      }\n\n      parent = parent.getParent();\n    }\n\n    const transform = this.getAbsoluteTransform(top);\n    const attrs = transform.decompose();\n    return {\n      x: attrs.scaleX,\n      y: attrs.scaleY\n    };\n  }\n\n  getAbsoluteRotation() {\n    return this.getAbsoluteTransform().decompose().rotation;\n  }\n\n  getTransform() {\n    return this._getCache(TRANSFORM, this._getTransform);\n  }\n\n  _getTransform() {\n    var _a, _b;\n\n    var m = this._cache.get(TRANSFORM) || new Transform();\n    m.reset();\n    var x = this.x(),\n        y = this.y(),\n        rotation = Konva.getAngle(this.rotation()),\n        scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1,\n        scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1,\n        skewX = this.attrs.skewX || 0,\n        skewY = this.attrs.skewY || 0,\n        offsetX = this.attrs.offsetX || 0,\n        offsetY = this.attrs.offsetY || 0;\n\n    if (x !== 0 || y !== 0) {\n      m.translate(x, y);\n    }\n\n    if (rotation !== 0) {\n      m.rotate(rotation);\n    }\n\n    if (skewX !== 0 || skewY !== 0) {\n      m.skew(skewX, skewY);\n    }\n\n    if (scaleX !== 1 || scaleY !== 1) {\n      m.scale(scaleX, scaleY);\n    }\n\n    if (offsetX !== 0 || offsetY !== 0) {\n      m.translate(-1 * offsetX, -1 * offsetY);\n    }\n\n    m.dirty = false;\n    return m;\n  }\n\n  clone(obj) {\n    var attrs = Util.cloneObject(this.attrs),\n        key,\n        allListeners,\n        len,\n        n,\n        listener;\n\n    for (key in obj) {\n      attrs[key] = obj[key];\n    }\n\n    var node = new this.constructor(attrs);\n\n    for (key in this.eventListeners) {\n      allListeners = this.eventListeners[key];\n      len = allListeners.length;\n\n      for (n = 0; n < len; n++) {\n        listener = allListeners[n];\n\n        if (listener.name.indexOf(KONVA) < 0) {\n          if (!node.eventListeners[key]) {\n            node.eventListeners[key] = [];\n          }\n\n          node.eventListeners[key].push(listener);\n        }\n      }\n    }\n\n    return node;\n  }\n\n  _toKonvaCanvas(config) {\n    config = config || {};\n    var box = this.getClientRect();\n    var stage = this.getStage(),\n        x = config.x !== undefined ? config.x : box.x,\n        y = config.y !== undefined ? config.y : box.y,\n        pixelRatio = config.pixelRatio || 1,\n        canvas = new SceneCanvas({\n      width: config.width || box.width || (stage ? stage.width() : 0),\n      height: config.height || box.height || (stage ? stage.height() : 0),\n      pixelRatio: pixelRatio\n    }),\n        context = canvas.getContext();\n    context.save();\n\n    if (x || y) {\n      context.translate(-1 * x, -1 * y);\n    }\n\n    this.drawScene(canvas);\n    context.restore();\n    return canvas;\n  }\n\n  toCanvas(config) {\n    return this._toKonvaCanvas(config)._canvas;\n  }\n\n  toDataURL(config) {\n    config = config || {};\n    var mimeType = config.mimeType || null,\n        quality = config.quality || null;\n\n    var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n\n    if (config.callback) {\n      config.callback(url);\n    }\n\n    return url;\n  }\n\n  toImage(config) {\n    if (!config || !config.callback) {\n      throw 'callback required for toImage method config argument';\n    }\n\n    var callback = config.callback;\n    delete config.callback;\n\n    Util._urlToImage(this.toDataURL(config), function (img) {\n      callback(img);\n    });\n  }\n\n  setSize(size) {\n    this.width(size.width);\n    this.height(size.height);\n    return this;\n  }\n\n  getSize() {\n    return {\n      width: this.width(),\n      height: this.height()\n    };\n  }\n\n  getClassName() {\n    return this.className || this.nodeType;\n  }\n\n  getType() {\n    return this.nodeType;\n  }\n\n  getDragDistance() {\n    if (this.attrs.dragDistance !== undefined) {\n      return this.attrs.dragDistance;\n    } else if (this.parent) {\n      return this.parent.getDragDistance();\n    } else {\n      return Konva.dragDistance;\n    }\n  }\n\n  _off(type, name, callback) {\n    var evtListeners = this.eventListeners[type],\n        i,\n        evtName,\n        handler;\n\n    for (i = 0; i < evtListeners.length; i++) {\n      evtName = evtListeners[i].name;\n      handler = evtListeners[i].handler;\n\n      if ((evtName !== 'konva' || name === 'konva') && (!name || evtName === name) && (!callback || callback === handler)) {\n        evtListeners.splice(i, 1);\n\n        if (evtListeners.length === 0) {\n          delete this.eventListeners[type];\n          break;\n        }\n\n        i--;\n      }\n    }\n  }\n\n  _fireChangeEvent(attr, oldVal, newVal) {\n    this._fire(attr + CHANGE, {\n      oldVal: oldVal,\n      newVal: newVal\n    });\n  }\n\n  addName(name) {\n    if (!this.hasName(name)) {\n      var oldName = this.name();\n      var newName = oldName ? oldName + ' ' + name : name;\n      this.name(newName);\n    }\n\n    return this;\n  }\n\n  hasName(name) {\n    if (!name) {\n      return false;\n    }\n\n    const fullName = this.name();\n\n    if (!fullName) {\n      return false;\n    }\n\n    var names = (fullName || '').split(/\\s/g);\n    return names.indexOf(name) !== -1;\n  }\n\n  removeName(name) {\n    var names = (this.name() || '').split(/\\s/g);\n    var index = names.indexOf(name);\n\n    if (index !== -1) {\n      names.splice(index, 1);\n      this.name(names.join(' '));\n    }\n\n    return this;\n  }\n\n  setAttr(attr, val) {\n    var func = this[SET + Util._capitalize(attr)];\n\n    if (Util._isFunction(func)) {\n      func.call(this, val);\n    } else {\n      this._setAttr(attr, val);\n    }\n\n    return this;\n  }\n\n  _requestDraw() {\n    if (Konva.autoDrawEnabled) {\n      const drawNode = this.getLayer() || this.getStage();\n      drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\n    }\n  }\n\n  _setAttr(key, val) {\n    var oldVal = this.attrs[key];\n\n    if (oldVal === val && !Util.isObject(val)) {\n      return;\n    }\n\n    if (val === undefined || val === null) {\n      delete this.attrs[key];\n    } else {\n      this.attrs[key] = val;\n    }\n\n    if (this._shouldFireChangeEvents) {\n      this._fireChangeEvent(key, oldVal, val);\n    }\n\n    this._requestDraw();\n  }\n\n  _setComponentAttr(key, component, val) {\n    var oldVal;\n\n    if (val !== undefined) {\n      oldVal = this.attrs[key];\n\n      if (!oldVal) {\n        this.attrs[key] = this.getAttr(key);\n      }\n\n      this.attrs[key][component] = val;\n\n      this._fireChangeEvent(key, oldVal, val);\n    }\n  }\n\n  _fireAndBubble(eventType, evt, compareShape) {\n    if (evt && this.nodeType === SHAPE) {\n      evt.target = this;\n    }\n\n    var shouldStop = (eventType === MOUSEENTER || eventType === MOUSELEAVE) && (compareShape && (this === compareShape || this.isAncestorOf && this.isAncestorOf(compareShape)) || this.nodeType === 'Stage' && !compareShape);\n\n    if (!shouldStop) {\n      this._fire(eventType, evt);\n\n      var stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) && compareShape && compareShape.isAncestorOf && compareShape.isAncestorOf(this) && !compareShape.isAncestorOf(this.parent);\n\n      if ((evt && !evt.cancelBubble || !evt) && this.parent && this.parent.isListening() && !stopBubble) {\n        if (compareShape && compareShape.parent) {\n          this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n        } else {\n          this._fireAndBubble.call(this.parent, eventType, evt);\n        }\n      }\n    }\n  }\n\n  _getProtoListeners(eventType) {\n    let listeners = this._cache.get(ALL_LISTENERS);\n\n    if (!listeners) {\n      listeners = {};\n      let obj = Object.getPrototypeOf(this);\n\n      while (obj) {\n        if (!obj.eventListeners) {\n          obj = Object.getPrototypeOf(obj);\n          continue;\n        }\n\n        for (var event in obj.eventListeners) {\n          const newEvents = obj.eventListeners[event];\n          const oldEvents = listeners[event] || [];\n          listeners[event] = newEvents.concat(oldEvents);\n        }\n\n        obj = Object.getPrototypeOf(obj);\n      }\n\n      this._cache.set(ALL_LISTENERS, listeners);\n    }\n\n    return listeners[eventType];\n  }\n\n  _fire(eventType, evt) {\n    evt = evt || {};\n    evt.currentTarget = this;\n    evt.type = eventType;\n\n    const topListeners = this._getProtoListeners(eventType);\n\n    if (topListeners) {\n      for (var i = 0; i < topListeners.length; i++) {\n        topListeners[i].handler.call(this, evt);\n      }\n    }\n\n    const selfListeners = this.eventListeners[eventType];\n\n    if (selfListeners) {\n      for (var i = 0; i < selfListeners.length; i++) {\n        selfListeners[i].handler.call(this, evt);\n      }\n    }\n  }\n\n  draw() {\n    this.drawScene();\n    this.drawHit();\n    return this;\n  }\n\n  _createDragElement(evt) {\n    var pointerId = evt ? evt.pointerId : undefined;\n    var stage = this.getStage();\n    var ap = this.getAbsolutePosition();\n    var pos = stage._getPointerById(pointerId) || stage._changedPointerPositions[0] || ap;\n\n    DD._dragElements.set(this._id, {\n      node: this,\n      startPointerPos: pos,\n      offset: {\n        x: pos.x - ap.x,\n        y: pos.y - ap.y\n      },\n      dragStatus: 'ready',\n      pointerId\n    });\n  }\n\n  startDrag(evt, bubbleEvent = true) {\n    if (!DD._dragElements.has(this._id)) {\n      this._createDragElement(evt);\n    }\n\n    const elem = DD._dragElements.get(this._id);\n\n    elem.dragStatus = 'dragging';\n    this.fire('dragstart', {\n      type: 'dragstart',\n      target: this,\n      evt: evt && evt.evt\n    }, bubbleEvent);\n  }\n\n  _setDragPosition(evt, elem) {\n    const pos = this.getStage()._getPointerById(elem.pointerId);\n\n    if (!pos) {\n      return;\n    }\n\n    var newNodePos = {\n      x: pos.x - elem.offset.x,\n      y: pos.y - elem.offset.y\n    };\n    var dbf = this.dragBoundFunc();\n\n    if (dbf !== undefined) {\n      const bounded = dbf.call(this, newNodePos, evt);\n\n      if (!bounded) {\n        Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\n      } else {\n        newNodePos = bounded;\n      }\n    }\n\n    if (!this._lastPos || this._lastPos.x !== newNodePos.x || this._lastPos.y !== newNodePos.y) {\n      this.setAbsolutePosition(newNodePos);\n\n      this._requestDraw();\n    }\n\n    this._lastPos = newNodePos;\n  }\n\n  stopDrag(evt) {\n    const elem = DD._dragElements.get(this._id);\n\n    if (elem) {\n      elem.dragStatus = 'stopped';\n    }\n\n    DD._endDragBefore(evt);\n\n    DD._endDragAfter(evt);\n  }\n\n  setDraggable(draggable) {\n    this._setAttr('draggable', draggable);\n\n    this._dragChange();\n  }\n\n  isDragging() {\n    const elem = DD._dragElements.get(this._id);\n\n    return elem ? elem.dragStatus === 'dragging' : false;\n  }\n\n  _listenDrag() {\n    this._dragCleanup();\n\n    this.on('mousedown.konva touchstart.konva', function (evt) {\n      var shouldCheckButton = evt.evt['button'] !== undefined;\n      var canDrag = !shouldCheckButton || Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\n\n      if (!canDrag) {\n        return;\n      }\n\n      if (this.isDragging()) {\n        return;\n      }\n\n      var hasDraggingChild = false;\n\n      DD._dragElements.forEach(elem => {\n        if (this.isAncestorOf(elem.node)) {\n          hasDraggingChild = true;\n        }\n      });\n\n      if (!hasDraggingChild) {\n        this._createDragElement(evt);\n      }\n    });\n  }\n\n  _dragChange() {\n    if (this.attrs.draggable) {\n      this._listenDrag();\n    } else {\n      this._dragCleanup();\n\n      var stage = this.getStage();\n\n      if (!stage) {\n        return;\n      }\n\n      const dragElement = DD._dragElements.get(this._id);\n\n      const isDragging = dragElement && dragElement.dragStatus === 'dragging';\n      const isReady = dragElement && dragElement.dragStatus === 'ready';\n\n      if (isDragging) {\n        this.stopDrag();\n      } else if (isReady) {\n        DD._dragElements.delete(this._id);\n      }\n    }\n  }\n\n  _dragCleanup() {\n    this.off('mousedown.konva');\n    this.off('touchstart.konva');\n  }\n\n  isClientRectOnScreen(margin = {\n    x: 0,\n    y: 0\n  }) {\n    const stage = this.getStage();\n\n    if (!stage) {\n      return false;\n    }\n\n    const screenRect = {\n      x: -margin.x,\n      y: -margin.y,\n      width: stage.width() + margin.x,\n      height: stage.height() + margin.y\n    };\n    return Util.haveIntersection(screenRect, this.getClientRect());\n  }\n\n  static create(data, container) {\n    if (Util._isString(data)) {\n      data = JSON.parse(data);\n    }\n\n    return this._createNode(data, container);\n  }\n\n  static _createNode(obj, container) {\n    var className = Node.prototype.getClassName.call(obj),\n        children = obj.children,\n        no,\n        len,\n        n;\n\n    if (container) {\n      obj.attrs.container = container;\n    }\n\n    if (!Konva[className]) {\n      Util.warn('Can not find a node with class name \"' + className + '\". Fallback to \"Shape\".');\n      className = 'Shape';\n    }\n\n    const Class = Konva[className];\n    no = new Class(obj.attrs);\n\n    if (children) {\n      len = children.length;\n\n      for (n = 0; n < len; n++) {\n        no.add(Node._createNode(children[n]));\n      }\n    }\n\n    return no;\n  }\n\n}\nNode.prototype.nodeType = 'Node';\nNode.prototype._attrsAffectingSize = [];\nNode.prototype.eventListeners = {};\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\n  if (this._batchingTransformChange) {\n    this._needClearTransformCache = true;\n    return;\n  }\n\n  this._clearCache(TRANSFORM);\n\n  this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n});\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\n  this._clearSelfAndDescendantCache(VISIBLE);\n});\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\n  this._clearSelfAndDescendantCache(LISTENING);\n});\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\n  this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n});\nconst addGetterSetter = Factory.addGetterSetter;\naddGetterSetter(Node, 'zIndex');\naddGetterSetter(Node, 'absolutePosition');\naddGetterSetter(Node, 'position');\naddGetterSetter(Node, 'x', 0, getNumberValidator());\naddGetterSetter(Node, 'y', 0, getNumberValidator());\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', getStringValidator());\naddGetterSetter(Node, 'opacity', 1, getNumberValidator());\naddGetterSetter(Node, 'name', '', getStringValidator());\naddGetterSetter(Node, 'id', '', getStringValidator());\naddGetterSetter(Node, 'rotation', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\naddGetterSetter(Node, 'scaleX', 1, getNumberValidator());\naddGetterSetter(Node, 'scaleY', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\naddGetterSetter(Node, 'skewX', 0, getNumberValidator());\naddGetterSetter(Node, 'skewY', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\naddGetterSetter(Node, 'offsetX', 0, getNumberValidator());\naddGetterSetter(Node, 'offsetY', 0, getNumberValidator());\naddGetterSetter(Node, 'dragDistance', null, getNumberValidator());\naddGetterSetter(Node, 'width', 0, getNumberValidator());\naddGetterSetter(Node, 'height', 0, getNumberValidator());\naddGetterSetter(Node, 'listening', true, getBooleanValidator());\naddGetterSetter(Node, 'preventDefault', true, getBooleanValidator());\naddGetterSetter(Node, 'filters', null, function (val) {\n  this._filterUpToDate = false;\n  return val;\n});\naddGetterSetter(Node, 'visible', true, getBooleanValidator());\naddGetterSetter(Node, 'transformsEnabled', 'all', getStringValidator());\naddGetterSetter(Node, 'size');\naddGetterSetter(Node, 'dragBoundFunc');\naddGetterSetter(Node, 'draggable', false, getBooleanValidator());\nFactory.backCompat(Node, {\n  rotateDeg: 'rotate',\n  setRotationDeg: 'setRotation',\n  getRotationDeg: 'getRotation'\n});","map":{"version":3,"sources":["/Users/stevec/Codeclan_Work/Group_Project/SnakesAndLadders/client/node_modules/konva/lib/Node.js"],"names":["Util","Transform","Factory","SceneCanvas","HitCanvas","Konva","DD","getNumberValidator","getStringValidator","getBooleanValidator","ABSOLUTE_OPACITY","ALL_LISTENERS","ABSOLUTE_TRANSFORM","ABSOLUTE_SCALE","CANVAS","CHANGE","CHILDREN","KONVA","LISTENING","MOUSEENTER","MOUSELEAVE","NAME","SET","SHAPE","SPACE","STAGE","TRANSFORM","UPPER_STAGE","VISIBLE","TRANSFORM_CHANGE_STR","join","idCounter","Node","constructor","config","_id","eventListeners","attrs","index","_allEventListeners","parent","_cache","Map","_attachedDepsListeners","_lastPos","_batchingTransformChange","_needClearTransformCache","_filterUpToDate","_isUnderCache","_dragEventId","_shouldFireChangeEvents","setAttrs","hasChildren","_clearCache","attr","get","dirty","delete","clear","_getCache","privateGetter","cache","isTransform","invalid","undefined","call","set","_calculate","name","deps","getter","depsString","map","dep","on","_getCanvasCache","_clearSelfAndDescendantCache","fire","clearCache","_requestDraw","conf","rect","x","y","width","height","getClientRect","skipTransform","relativeTo","getParent","Math","ceil","pixelRatio","offset","drawBorder","hitCanvasPixelRatio","error","cachedSceneCanvas","cachedFilterCanvas","cachedHitCanvas","sceneContext","getContext","hitContext","isCache","imageSmoothingEnabled","_context","save","translate","drawScene","drawHit","restore","beginPath","closePath","setAttr","stroke","scene","filter","hit","isCached","has","Error","_transformedRect","top","points","minX","minY","maxX","maxY","trans","getAbsoluteTransform","forEach","point","transformed","min","max","_drawCachedSceneCanvas","context","_applyOpacity","_applyGlobalCompositeOperation","canvasCache","cacheCanvas","_getCachedSceneCanvas","ratio","drawImage","_canvas","_drawCachedHitCanvas","hitCanvas","filters","cachedCanvas","sceneCanvas","filterCanvas","filterContext","len","imageData","n","setSize","length","getWidth","getHeight","getImageData","putImageData","e","message","evtStr","handler","arguments","_delegate","apply","events","split","event","parts","baseEvent","push","off","callback","t","_off","dispatchEvent","evt","target","type","addEventListener","removeEventListener","selector","stopNode","targets","findAncestors","i","cloneObject","currentTarget","remove","isDragging","stopDrag","_dragElements","_remove","_clearCaches","children","splice","_setChildrenIndices","destroy","getAttr","method","_capitalize","_isFunction","getAncestors","ancestors","getAttrs","_batchTransformChanges","key","_setAttr","isListening","_isListening","listening","isVisible","_isVisible","visible","shouldDrawHit","skipDragCheck","layer","getLayer","layerUnderDrag","elem","dragStatus","node","nodeType","dragSkip","hitOnDragEnabled","show","hide","getZIndex","getAbsoluteZIndex","depth","getDepth","that","nodes","child","addChildren","concat","getChildren","slice","getStage","func","setPosition","pos","getPosition","getRelativePointerPosition","getPointerPosition","transform","copy","invert","getAbsolutePosition","haveCachedParent","absoluteMatrix","getMatrix","absoluteTransform","m","getTranslation","setAbsolutePosition","origTrans","_clearTransform","it","_getAbsoluteTransform","_setTransform","rotation","scaleX","scaleY","offsetX","offsetY","skewX","skewY","move","change","changeX","changeY","_eachAncestorReverse","family","unshift","rotate","theta","moveToTop","warn","moveUp","moveDown","moveToBottom","setZIndex","zIndex","getAbsoluteOpacity","_getAbsoluteOpacity","absOpacity","opacity","moveTo","newContainer","add","toObject","obj","val","defaultValue","nonPlainObject","isObject","_isPlainObject","_isArray","className","getClassName","_prepareToStringify","toJSON","JSON","stringify","includeSelf","res","_isMatch","ancestor","isAncestorOf","findAncestor","selectorArr","replace","sel","isValidSelector","charAt","id","hasName","_getStage","eventType","bubble","_fireAndBubble","_fire","at","transformsEnabled","multiply","getTransform","copyInto","reset","getAbsoluteScale","decompose","getAbsoluteRotation","_getTransform","_a","_b","getAngle","skew","scale","clone","allListeners","listener","indexOf","_toKonvaCanvas","box","stage","canvas","toCanvas","toDataURL","mimeType","quality","url","toImage","_urlToImage","img","size","getSize","getType","getDragDistance","dragDistance","evtListeners","evtName","_fireChangeEvent","oldVal","newVal","addName","oldName","newName","fullName","names","removeName","autoDrawEnabled","drawNode","batchDraw","_setComponentAttr","component","compareShape","shouldStop","stopBubble","cancelBubble","_getProtoListeners","listeners","Object","getPrototypeOf","newEvents","oldEvents","topListeners","selfListeners","draw","_createDragElement","pointerId","ap","_getPointerById","_changedPointerPositions","startPointerPos","startDrag","bubbleEvent","_setDragPosition","newNodePos","dbf","dragBoundFunc","bounded","_endDragBefore","_endDragAfter","setDraggable","draggable","_dragChange","_listenDrag","_dragCleanup","shouldCheckButton","canDrag","dragButtons","hasDraggingChild","dragElement","isReady","isClientRectOnScreen","margin","screenRect","haveIntersection","create","data","container","_isString","parse","_createNode","prototype","no","Class","_attrsAffectingSize","addGetterSetter","addComponentsGetterSetter","backCompat","rotateDeg","setRotationDeg","getRotationDeg"],"mappings":"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","sourcesContent":["import { Util, Transform } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { Konva } from './Global.js';\nimport { DD } from './DragAndDrop.js';\nimport { getNumberValidator, getStringValidator, getBooleanValidator, } from './Validators.js';\nvar ABSOLUTE_OPACITY = 'absoluteOpacity', ALL_LISTENERS = 'allEventListeners', ABSOLUTE_TRANSFORM = 'absoluteTransform', ABSOLUTE_SCALE = 'absoluteScale', CANVAS = 'canvas', CHANGE = 'Change', CHILDREN = 'children', KONVA = 'konva', LISTENING = 'listening', MOUSEENTER = 'mouseenter', MOUSELEAVE = 'mouseleave', NAME = 'name', SET = 'set', SHAPE = 'Shape', SPACE = ' ', STAGE = 'stage', TRANSFORM = 'transform', UPPER_STAGE = 'Stage', VISIBLE = 'visible', TRANSFORM_CHANGE_STR = [\n    'xChange.konva',\n    'yChange.konva',\n    'scaleXChange.konva',\n    'scaleYChange.konva',\n    'skewXChange.konva',\n    'skewYChange.konva',\n    'rotationChange.konva',\n    'offsetXChange.konva',\n    'offsetYChange.konva',\n    'transformsEnabledChange.konva',\n].join(SPACE);\nlet idCounter = 1;\nexport class Node {\n    constructor(config) {\n        this._id = idCounter++;\n        this.eventListeners = {};\n        this.attrs = {};\n        this.index = 0;\n        this._allEventListeners = null;\n        this.parent = null;\n        this._cache = new Map();\n        this._attachedDepsListeners = new Map();\n        this._lastPos = null;\n        this._batchingTransformChange = false;\n        this._needClearTransformCache = false;\n        this._filterUpToDate = false;\n        this._isUnderCache = false;\n        this._dragEventId = null;\n        this._shouldFireChangeEvents = false;\n        this.setAttrs(config);\n        this._shouldFireChangeEvents = true;\n    }\n    hasChildren() {\n        return false;\n    }\n    _clearCache(attr) {\n        if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) &&\n            this._cache.get(attr)) {\n            this._cache.get(attr).dirty = true;\n        }\n        else if (attr) {\n            this._cache.delete(attr);\n        }\n        else {\n            this._cache.clear();\n        }\n    }\n    _getCache(attr, privateGetter) {\n        var cache = this._cache.get(attr);\n        var isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\n        var invalid = cache === undefined || (isTransform && cache.dirty === true);\n        if (invalid) {\n            cache = privateGetter.call(this);\n            this._cache.set(attr, cache);\n        }\n        return cache;\n    }\n    _calculate(name, deps, getter) {\n        if (!this._attachedDepsListeners.get(name)) {\n            const depsString = deps.map((dep) => dep + 'Change.konva').join(SPACE);\n            this.on(depsString, () => {\n                this._clearCache(name);\n            });\n            this._attachedDepsListeners.set(name, true);\n        }\n        return this._getCache(name, getter);\n    }\n    _getCanvasCache() {\n        return this._cache.get(CANVAS);\n    }\n    _clearSelfAndDescendantCache(attr) {\n        this._clearCache(attr);\n        if (attr === ABSOLUTE_TRANSFORM) {\n            this.fire('absoluteTransformChange');\n        }\n    }\n    clearCache() {\n        this._cache.delete(CANVAS);\n        this._clearSelfAndDescendantCache();\n        this._requestDraw();\n        return this;\n    }\n    cache(config) {\n        var conf = config || {};\n        var rect = {};\n        if (conf.x === undefined ||\n            conf.y === undefined ||\n            conf.width === undefined ||\n            conf.height === undefined) {\n            rect = this.getClientRect({\n                skipTransform: true,\n                relativeTo: this.getParent(),\n            });\n        }\n        var width = Math.ceil(conf.width || rect.width), height = Math.ceil(conf.height || rect.height), pixelRatio = conf.pixelRatio, x = conf.x === undefined ? rect.x : conf.x, y = conf.y === undefined ? rect.y : conf.y, offset = conf.offset || 0, drawBorder = conf.drawBorder || false, hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n        if (!width || !height) {\n            Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\n            return;\n        }\n        width += offset * 2;\n        height += offset * 2;\n        x -= offset;\n        y -= offset;\n        var cachedSceneCanvas = new SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: width,\n            height: height,\n        }), cachedFilterCanvas = new SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: 0,\n            height: 0,\n        }), cachedHitCanvas = new HitCanvas({\n            pixelRatio: hitCanvasPixelRatio,\n            width: width,\n            height: height,\n        }), sceneContext = cachedSceneCanvas.getContext(), hitContext = cachedHitCanvas.getContext();\n        cachedHitCanvas.isCache = true;\n        cachedSceneCanvas.isCache = true;\n        this._cache.delete(CANVAS);\n        this._filterUpToDate = false;\n        if (conf.imageSmoothingEnabled === false) {\n            cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n            cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n        }\n        sceneContext.save();\n        hitContext.save();\n        sceneContext.translate(-x, -y);\n        hitContext.translate(-x, -y);\n        this._isUnderCache = true;\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this.drawScene(cachedSceneCanvas, this);\n        this.drawHit(cachedHitCanvas, this);\n        this._isUnderCache = false;\n        sceneContext.restore();\n        hitContext.restore();\n        if (drawBorder) {\n            sceneContext.save();\n            sceneContext.beginPath();\n            sceneContext.rect(0, 0, width, height);\n            sceneContext.closePath();\n            sceneContext.setAttr('strokeStyle', 'red');\n            sceneContext.setAttr('lineWidth', 5);\n            sceneContext.stroke();\n            sceneContext.restore();\n        }\n        this._cache.set(CANVAS, {\n            scene: cachedSceneCanvas,\n            filter: cachedFilterCanvas,\n            hit: cachedHitCanvas,\n            x: x,\n            y: y,\n        });\n        this._requestDraw();\n        return this;\n    }\n    isCached() {\n        return this._cache.has(CANVAS);\n    }\n    getClientRect(config) {\n        throw new Error('abstract \"getClientRect\" method call');\n    }\n    _transformedRect(rect, top) {\n        var points = [\n            { x: rect.x, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y + rect.height },\n            { x: rect.x, y: rect.y + rect.height },\n        ];\n        var minX, minY, maxX, maxY;\n        var trans = this.getAbsoluteTransform(top);\n        points.forEach(function (point) {\n            var transformed = trans.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    _drawCachedSceneCanvas(context) {\n        context.save();\n        context._applyOpacity(this);\n        context._applyGlobalCompositeOperation(this);\n        const canvasCache = this._getCanvasCache();\n        context.translate(canvasCache.x, canvasCache.y);\n        var cacheCanvas = this._getCachedSceneCanvas();\n        var ratio = cacheCanvas.pixelRatio;\n        context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n        context.restore();\n    }\n    _drawCachedHitCanvas(context) {\n        var canvasCache = this._getCanvasCache(), hitCanvas = canvasCache.hit;\n        context.save();\n        context.translate(canvasCache.x, canvasCache.y);\n        context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n        context.restore();\n    }\n    _getCachedSceneCanvas() {\n        var filters = this.filters(), cachedCanvas = this._getCanvasCache(), sceneCanvas = cachedCanvas.scene, filterCanvas = cachedCanvas.filter, filterContext = filterCanvas.getContext(), len, imageData, n, filter;\n        if (filters) {\n            if (!this._filterUpToDate) {\n                var ratio = sceneCanvas.pixelRatio;\n                filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n                try {\n                    len = filters.length;\n                    filterContext.clear();\n                    filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n                    imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n                    for (n = 0; n < len; n++) {\n                        filter = filters[n];\n                        if (typeof filter !== 'function') {\n                            Util.error('Filter should be type of function, but got ' +\n                                typeof filter +\n                                ' instead. Please check correct filters');\n                            continue;\n                        }\n                        filter.call(this, imageData);\n                        filterContext.putImageData(imageData, 0, 0);\n                    }\n                }\n                catch (e) {\n                    Util.error('Unable to apply filter. ' +\n                        e.message +\n                        ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n                }\n                this._filterUpToDate = true;\n            }\n            return filterCanvas;\n        }\n        return sceneCanvas;\n    }\n    on(evtStr, handler) {\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (arguments.length === 3) {\n            return this._delegate.apply(this, arguments);\n        }\n        var events = evtStr.split(SPACE), len = events.length, n, event, parts, baseEvent, name;\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split('.');\n            baseEvent = parts[0];\n            name = parts[1] || '';\n            if (!this.eventListeners[baseEvent]) {\n                this.eventListeners[baseEvent] = [];\n            }\n            this.eventListeners[baseEvent].push({\n                name: name,\n                handler: handler,\n            });\n        }\n        return this;\n    }\n    off(evtStr, callback) {\n        var events = (evtStr || '').split(SPACE), len = events.length, n, t, event, parts, baseEvent, name;\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (!evtStr) {\n            for (t in this.eventListeners) {\n                this._off(t);\n            }\n        }\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split('.');\n            baseEvent = parts[0];\n            name = parts[1];\n            if (baseEvent) {\n                if (this.eventListeners[baseEvent]) {\n                    this._off(baseEvent, name, callback);\n                }\n            }\n            else {\n                for (t in this.eventListeners) {\n                    this._off(t, name, callback);\n                }\n            }\n        }\n        return this;\n    }\n    dispatchEvent(evt) {\n        var e = {\n            target: this,\n            type: evt.type,\n            evt: evt,\n        };\n        this.fire(evt.type, e);\n        return this;\n    }\n    addEventListener(type, handler) {\n        this.on(type, function (evt) {\n            handler.call(this, evt.evt);\n        });\n        return this;\n    }\n    removeEventListener(type) {\n        this.off(type);\n        return this;\n    }\n    _delegate(event, selector, handler) {\n        var stopNode = this;\n        this.on(event, function (evt) {\n            var targets = evt.target.findAncestors(selector, true, stopNode);\n            for (var i = 0; i < targets.length; i++) {\n                evt = Util.cloneObject(evt);\n                evt.currentTarget = targets[i];\n                handler.call(targets[i], evt);\n            }\n        });\n    }\n    remove() {\n        if (this.isDragging()) {\n            this.stopDrag();\n        }\n        DD._dragElements.delete(this._id);\n        this._remove();\n        return this;\n    }\n    _clearCaches() {\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this._clearSelfAndDescendantCache(STAGE);\n        this._clearSelfAndDescendantCache(VISIBLE);\n        this._clearSelfAndDescendantCache(LISTENING);\n    }\n    _remove() {\n        this._clearCaches();\n        var parent = this.getParent();\n        if (parent && parent.children) {\n            parent.children.splice(this.index, 1);\n            parent._setChildrenIndices();\n            this.parent = null;\n        }\n    }\n    destroy() {\n        this.remove();\n        return this;\n    }\n    getAttr(attr) {\n        var method = 'get' + Util._capitalize(attr);\n        if (Util._isFunction(this[method])) {\n            return this[method]();\n        }\n        return this.attrs[attr];\n    }\n    getAncestors() {\n        var parent = this.getParent(), ancestors = [];\n        while (parent) {\n            ancestors.push(parent);\n            parent = parent.getParent();\n        }\n        return ancestors;\n    }\n    getAttrs() {\n        return this.attrs || {};\n    }\n    setAttrs(config) {\n        this._batchTransformChanges(() => {\n            var key, method;\n            if (!config) {\n                return this;\n            }\n            for (key in config) {\n                if (key === CHILDREN) {\n                    continue;\n                }\n                method = SET + Util._capitalize(key);\n                if (Util._isFunction(this[method])) {\n                    this[method](config[key]);\n                }\n                else {\n                    this._setAttr(key, config[key]);\n                }\n            }\n        });\n        return this;\n    }\n    isListening() {\n        return this._getCache(LISTENING, this._isListening);\n    }\n    _isListening(relativeTo) {\n        const listening = this.listening();\n        if (!listening) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isListening(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    isVisible() {\n        return this._getCache(VISIBLE, this._isVisible);\n    }\n    _isVisible(relativeTo) {\n        const visible = this.visible();\n        if (!visible) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isVisible(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    shouldDrawHit(top, skipDragCheck = false) {\n        if (top) {\n            return this._isVisible(top) && this._isListening(top);\n        }\n        var layer = this.getLayer();\n        var layerUnderDrag = false;\n        DD._dragElements.forEach((elem) => {\n            if (elem.dragStatus !== 'dragging') {\n                return;\n            }\n            else if (elem.node.nodeType === 'Stage') {\n                layerUnderDrag = true;\n            }\n            else if (elem.node.getLayer() === layer) {\n                layerUnderDrag = true;\n            }\n        });\n        var dragSkip = !skipDragCheck && !Konva.hitOnDragEnabled && layerUnderDrag;\n        return this.isListening() && this.isVisible() && !dragSkip;\n    }\n    show() {\n        this.visible(true);\n        return this;\n    }\n    hide() {\n        this.visible(false);\n        return this;\n    }\n    getZIndex() {\n        return this.index || 0;\n    }\n    getAbsoluteZIndex() {\n        var depth = this.getDepth(), that = this, index = 0, nodes, len, n, child;\n        function addChildren(children) {\n            nodes = [];\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                child = children[n];\n                index++;\n                if (child.nodeType !== SHAPE) {\n                    nodes = nodes.concat(child.getChildren().slice());\n                }\n                if (child._id === that._id) {\n                    n = len;\n                }\n            }\n            if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n                addChildren(nodes);\n            }\n        }\n        if (that.nodeType !== UPPER_STAGE) {\n            addChildren(that.getStage().getChildren());\n        }\n        return index;\n    }\n    getDepth() {\n        var depth = 0, parent = this.parent;\n        while (parent) {\n            depth++;\n            parent = parent.parent;\n        }\n        return depth;\n    }\n    _batchTransformChanges(func) {\n        this._batchingTransformChange = true;\n        func();\n        this._batchingTransformChange = false;\n        if (this._needClearTransformCache) {\n            this._clearCache(TRANSFORM);\n            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        }\n        this._needClearTransformCache = false;\n    }\n    setPosition(pos) {\n        this._batchTransformChanges(() => {\n            this.x(pos.x);\n            this.y(pos.y);\n        });\n        return this;\n    }\n    getPosition() {\n        return {\n            x: this.x(),\n            y: this.y(),\n        };\n    }\n    getRelativePointerPosition() {\n        if (!this.getStage()) {\n            return null;\n        }\n        var pos = this.getStage().getPointerPosition();\n        if (!pos) {\n            return null;\n        }\n        var transform = this.getAbsoluteTransform().copy();\n        transform.invert();\n        return transform.point(pos);\n    }\n    getAbsolutePosition(top) {\n        let haveCachedParent = false;\n        let parent = this.parent;\n        while (parent) {\n            if (parent.isCached()) {\n                haveCachedParent = true;\n                break;\n            }\n            parent = parent.parent;\n        }\n        if (haveCachedParent && !top) {\n            top = true;\n        }\n        var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(), absoluteTransform = new Transform(), offset = this.offset();\n        absoluteTransform.m = absoluteMatrix.slice();\n        absoluteTransform.translate(offset.x, offset.y);\n        return absoluteTransform.getTranslation();\n    }\n    setAbsolutePosition(pos) {\n        var origTrans = this._clearTransform();\n        this.attrs.x = origTrans.x;\n        this.attrs.y = origTrans.y;\n        delete origTrans.x;\n        delete origTrans.y;\n        this._clearCache(TRANSFORM);\n        var it = this._getAbsoluteTransform().copy();\n        it.invert();\n        it.translate(pos.x, pos.y);\n        pos = {\n            x: this.attrs.x + it.getTranslation().x,\n            y: this.attrs.y + it.getTranslation().y,\n        };\n        this._setTransform(origTrans);\n        this.setPosition({ x: pos.x, y: pos.y });\n        this._clearCache(TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        return this;\n    }\n    _setTransform(trans) {\n        var key;\n        for (key in trans) {\n            this.attrs[key] = trans[key];\n        }\n    }\n    _clearTransform() {\n        var trans = {\n            x: this.x(),\n            y: this.y(),\n            rotation: this.rotation(),\n            scaleX: this.scaleX(),\n            scaleY: this.scaleY(),\n            offsetX: this.offsetX(),\n            offsetY: this.offsetY(),\n            skewX: this.skewX(),\n            skewY: this.skewY(),\n        };\n        this.attrs.x = 0;\n        this.attrs.y = 0;\n        this.attrs.rotation = 0;\n        this.attrs.scaleX = 1;\n        this.attrs.scaleY = 1;\n        this.attrs.offsetX = 0;\n        this.attrs.offsetY = 0;\n        this.attrs.skewX = 0;\n        this.attrs.skewY = 0;\n        return trans;\n    }\n    move(change) {\n        var changeX = change.x, changeY = change.y, x = this.x(), y = this.y();\n        if (changeX !== undefined) {\n            x += changeX;\n        }\n        if (changeY !== undefined) {\n            y += changeY;\n        }\n        this.setPosition({ x: x, y: y });\n        return this;\n    }\n    _eachAncestorReverse(func, top) {\n        var family = [], parent = this.getParent(), len, n;\n        if (top && top._id === this._id) {\n            return;\n        }\n        family.unshift(this);\n        while (parent && (!top || parent._id !== top._id)) {\n            family.unshift(parent);\n            parent = parent.parent;\n        }\n        len = family.length;\n        for (n = 0; n < len; n++) {\n            func(family[n]);\n        }\n    }\n    rotate(theta) {\n        this.rotation(this.rotation() + theta);\n        return this;\n    }\n    moveToTop() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveToTop function is ignored.');\n            return false;\n        }\n        var index = this.index;\n        this.parent.children.splice(index, 1);\n        this.parent.children.push(this);\n        this.parent._setChildrenIndices();\n        return true;\n    }\n    moveUp() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveUp function is ignored.');\n            return false;\n        }\n        var index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index + 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveDown() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveDown function is ignored.');\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index - 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveToBottom function is ignored.');\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.unshift(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    setZIndex(zIndex) {\n        if (!this.parent) {\n            Util.warn('Node has no parent. zIndex parameter is ignored.');\n            return this;\n        }\n        if (zIndex < 0 || zIndex >= this.parent.children.length) {\n            Util.warn('Unexpected value ' +\n                zIndex +\n                ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' +\n                (this.parent.children.length - 1) +\n                '.');\n        }\n        var index = this.index;\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(zIndex, 0, this);\n        this.parent._setChildrenIndices();\n        return this;\n    }\n    getAbsoluteOpacity() {\n        return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n    }\n    _getAbsoluteOpacity() {\n        var absOpacity = this.opacity();\n        var parent = this.getParent();\n        if (parent && !parent._isUnderCache) {\n            absOpacity *= parent.getAbsoluteOpacity();\n        }\n        return absOpacity;\n    }\n    moveTo(newContainer) {\n        if (this.getParent() !== newContainer) {\n            this._remove();\n            newContainer.add(this);\n        }\n        return this;\n    }\n    toObject() {\n        var obj = {}, attrs = this.getAttrs(), key, val, getter, defaultValue, nonPlainObject;\n        obj.attrs = {};\n        for (key in attrs) {\n            val = attrs[key];\n            nonPlainObject =\n                Util.isObject(val) && !Util._isPlainObject(val) && !Util._isArray(val);\n            if (nonPlainObject) {\n                continue;\n            }\n            getter = typeof this[key] === 'function' && this[key];\n            delete attrs[key];\n            defaultValue = getter ? getter.call(this) : null;\n            attrs[key] = val;\n            if (defaultValue !== val) {\n                obj.attrs[key] = val;\n            }\n        }\n        obj.className = this.getClassName();\n        return Util._prepareToStringify(obj);\n    }\n    toJSON() {\n        return JSON.stringify(this.toObject());\n    }\n    getParent() {\n        return this.parent;\n    }\n    findAncestors(selector, includeSelf, stopNode) {\n        var res = [];\n        if (includeSelf && this._isMatch(selector)) {\n            res.push(this);\n        }\n        var ancestor = this.parent;\n        while (ancestor) {\n            if (ancestor === stopNode) {\n                return res;\n            }\n            if (ancestor._isMatch(selector)) {\n                res.push(ancestor);\n            }\n            ancestor = ancestor.parent;\n        }\n        return res;\n    }\n    isAncestorOf(node) {\n        return false;\n    }\n    findAncestor(selector, includeSelf, stopNode) {\n        return this.findAncestors(selector, includeSelf, stopNode)[0];\n    }\n    _isMatch(selector) {\n        if (!selector) {\n            return false;\n        }\n        if (typeof selector === 'function') {\n            return selector(this);\n        }\n        var selectorArr = selector.replace(/ /g, '').split(','), len = selectorArr.length, n, sel;\n        for (n = 0; n < len; n++) {\n            sel = selectorArr[n];\n            if (!Util.isValidSelector(sel)) {\n                Util.warn('Selector \"' +\n                    sel +\n                    '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n                Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n                Util.warn('Konva is awesome, right?');\n            }\n            if (sel.charAt(0) === '#') {\n                if (this.id() === sel.slice(1)) {\n                    return true;\n                }\n            }\n            else if (sel.charAt(0) === '.') {\n                if (this.hasName(sel.slice(1))) {\n                    return true;\n                }\n            }\n            else if (this.className === sel || this.nodeType === sel) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getLayer() {\n        var parent = this.getParent();\n        return parent ? parent.getLayer() : null;\n    }\n    getStage() {\n        return this._getCache(STAGE, this._getStage);\n    }\n    _getStage() {\n        var parent = this.getParent();\n        if (parent) {\n            return parent.getStage();\n        }\n        else {\n            return undefined;\n        }\n    }\n    fire(eventType, evt = {}, bubble) {\n        evt.target = evt.target || this;\n        if (bubble) {\n            this._fireAndBubble(eventType, evt);\n        }\n        else {\n            this._fire(eventType, evt);\n        }\n        return this;\n    }\n    getAbsoluteTransform(top) {\n        if (top) {\n            return this._getAbsoluteTransform(top);\n        }\n        else {\n            return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n        }\n    }\n    _getAbsoluteTransform(top) {\n        var at;\n        if (top) {\n            at = new Transform();\n            this._eachAncestorReverse(function (node) {\n                var transformsEnabled = node.transformsEnabled();\n                if (transformsEnabled === 'all') {\n                    at.multiply(node.getTransform());\n                }\n                else if (transformsEnabled === 'position') {\n                    at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n                }\n            }, top);\n            return at;\n        }\n        else {\n            at = this._cache.get(ABSOLUTE_TRANSFORM) || new Transform();\n            if (this.parent) {\n                this.parent.getAbsoluteTransform().copyInto(at);\n            }\n            else {\n                at.reset();\n            }\n            var transformsEnabled = this.transformsEnabled();\n            if (transformsEnabled === 'all') {\n                at.multiply(this.getTransform());\n            }\n            else if (transformsEnabled === 'position') {\n                const x = this.attrs.x || 0;\n                const y = this.attrs.y || 0;\n                const offsetX = this.attrs.offsetX || 0;\n                const offsetY = this.attrs.offsetY || 0;\n                at.translate(x - offsetX, y - offsetY);\n            }\n            at.dirty = false;\n            return at;\n        }\n    }\n    getAbsoluteScale(top) {\n        var parent = this;\n        while (parent) {\n            if (parent._isUnderCache) {\n                top = parent;\n            }\n            parent = parent.getParent();\n        }\n        const transform = this.getAbsoluteTransform(top);\n        const attrs = transform.decompose();\n        return {\n            x: attrs.scaleX,\n            y: attrs.scaleY,\n        };\n    }\n    getAbsoluteRotation() {\n        return this.getAbsoluteTransform().decompose().rotation;\n    }\n    getTransform() {\n        return this._getCache(TRANSFORM, this._getTransform);\n    }\n    _getTransform() {\n        var _a, _b;\n        var m = this._cache.get(TRANSFORM) || new Transform();\n        m.reset();\n        var x = this.x(), y = this.y(), rotation = Konva.getAngle(this.rotation()), scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1, scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1, skewX = this.attrs.skewX || 0, skewY = this.attrs.skewY || 0, offsetX = this.attrs.offsetX || 0, offsetY = this.attrs.offsetY || 0;\n        if (x !== 0 || y !== 0) {\n            m.translate(x, y);\n        }\n        if (rotation !== 0) {\n            m.rotate(rotation);\n        }\n        if (skewX !== 0 || skewY !== 0) {\n            m.skew(skewX, skewY);\n        }\n        if (scaleX !== 1 || scaleY !== 1) {\n            m.scale(scaleX, scaleY);\n        }\n        if (offsetX !== 0 || offsetY !== 0) {\n            m.translate(-1 * offsetX, -1 * offsetY);\n        }\n        m.dirty = false;\n        return m;\n    }\n    clone(obj) {\n        var attrs = Util.cloneObject(this.attrs), key, allListeners, len, n, listener;\n        for (key in obj) {\n            attrs[key] = obj[key];\n        }\n        var node = new this.constructor(attrs);\n        for (key in this.eventListeners) {\n            allListeners = this.eventListeners[key];\n            len = allListeners.length;\n            for (n = 0; n < len; n++) {\n                listener = allListeners[n];\n                if (listener.name.indexOf(KONVA) < 0) {\n                    if (!node.eventListeners[key]) {\n                        node.eventListeners[key] = [];\n                    }\n                    node.eventListeners[key].push(listener);\n                }\n            }\n        }\n        return node;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        var box = this.getClientRect();\n        var stage = this.getStage(), x = config.x !== undefined ? config.x : box.x, y = config.y !== undefined ? config.y : box.y, pixelRatio = config.pixelRatio || 1, canvas = new SceneCanvas({\n            width: config.width || box.width || (stage ? stage.width() : 0),\n            height: config.height || box.height || (stage ? stage.height() : 0),\n            pixelRatio: pixelRatio,\n        }), context = canvas.getContext();\n        context.save();\n        if (x || y) {\n            context.translate(-1 * x, -1 * y);\n        }\n        this.drawScene(canvas);\n        context.restore();\n        return canvas;\n    }\n    toCanvas(config) {\n        return this._toKonvaCanvas(config)._canvas;\n    }\n    toDataURL(config) {\n        config = config || {};\n        var mimeType = config.mimeType || null, quality = config.quality || null;\n        var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n        if (config.callback) {\n            config.callback(url);\n        }\n        return url;\n    }\n    toImage(config) {\n        if (!config || !config.callback) {\n            throw 'callback required for toImage method config argument';\n        }\n        var callback = config.callback;\n        delete config.callback;\n        Util._urlToImage(this.toDataURL(config), function (img) {\n            callback(img);\n        });\n    }\n    setSize(size) {\n        this.width(size.width);\n        this.height(size.height);\n        return this;\n    }\n    getSize() {\n        return {\n            width: this.width(),\n            height: this.height(),\n        };\n    }\n    getClassName() {\n        return this.className || this.nodeType;\n    }\n    getType() {\n        return this.nodeType;\n    }\n    getDragDistance() {\n        if (this.attrs.dragDistance !== undefined) {\n            return this.attrs.dragDistance;\n        }\n        else if (this.parent) {\n            return this.parent.getDragDistance();\n        }\n        else {\n            return Konva.dragDistance;\n        }\n    }\n    _off(type, name, callback) {\n        var evtListeners = this.eventListeners[type], i, evtName, handler;\n        for (i = 0; i < evtListeners.length; i++) {\n            evtName = evtListeners[i].name;\n            handler = evtListeners[i].handler;\n            if ((evtName !== 'konva' || name === 'konva') &&\n                (!name || evtName === name) &&\n                (!callback || callback === handler)) {\n                evtListeners.splice(i, 1);\n                if (evtListeners.length === 0) {\n                    delete this.eventListeners[type];\n                    break;\n                }\n                i--;\n            }\n        }\n    }\n    _fireChangeEvent(attr, oldVal, newVal) {\n        this._fire(attr + CHANGE, {\n            oldVal: oldVal,\n            newVal: newVal,\n        });\n    }\n    addName(name) {\n        if (!this.hasName(name)) {\n            var oldName = this.name();\n            var newName = oldName ? oldName + ' ' + name : name;\n            this.name(newName);\n        }\n        return this;\n    }\n    hasName(name) {\n        if (!name) {\n            return false;\n        }\n        const fullName = this.name();\n        if (!fullName) {\n            return false;\n        }\n        var names = (fullName || '').split(/\\s/g);\n        return names.indexOf(name) !== -1;\n    }\n    removeName(name) {\n        var names = (this.name() || '').split(/\\s/g);\n        var index = names.indexOf(name);\n        if (index !== -1) {\n            names.splice(index, 1);\n            this.name(names.join(' '));\n        }\n        return this;\n    }\n    setAttr(attr, val) {\n        var func = this[SET + Util._capitalize(attr)];\n        if (Util._isFunction(func)) {\n            func.call(this, val);\n        }\n        else {\n            this._setAttr(attr, val);\n        }\n        return this;\n    }\n    _requestDraw() {\n        if (Konva.autoDrawEnabled) {\n            const drawNode = this.getLayer() || this.getStage();\n            drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\n        }\n    }\n    _setAttr(key, val) {\n        var oldVal = this.attrs[key];\n        if (oldVal === val && !Util.isObject(val)) {\n            return;\n        }\n        if (val === undefined || val === null) {\n            delete this.attrs[key];\n        }\n        else {\n            this.attrs[key] = val;\n        }\n        if (this._shouldFireChangeEvents) {\n            this._fireChangeEvent(key, oldVal, val);\n        }\n        this._requestDraw();\n    }\n    _setComponentAttr(key, component, val) {\n        var oldVal;\n        if (val !== undefined) {\n            oldVal = this.attrs[key];\n            if (!oldVal) {\n                this.attrs[key] = this.getAttr(key);\n            }\n            this.attrs[key][component] = val;\n            this._fireChangeEvent(key, oldVal, val);\n        }\n    }\n    _fireAndBubble(eventType, evt, compareShape) {\n        if (evt && this.nodeType === SHAPE) {\n            evt.target = this;\n        }\n        var shouldStop = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n            ((compareShape &&\n                (this === compareShape ||\n                    (this.isAncestorOf && this.isAncestorOf(compareShape)))) ||\n                (this.nodeType === 'Stage' && !compareShape));\n        if (!shouldStop) {\n            this._fire(eventType, evt);\n            var stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n                compareShape &&\n                compareShape.isAncestorOf &&\n                compareShape.isAncestorOf(this) &&\n                !compareShape.isAncestorOf(this.parent);\n            if (((evt && !evt.cancelBubble) || !evt) &&\n                this.parent &&\n                this.parent.isListening() &&\n                !stopBubble) {\n                if (compareShape && compareShape.parent) {\n                    this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n                }\n                else {\n                    this._fireAndBubble.call(this.parent, eventType, evt);\n                }\n            }\n        }\n    }\n    _getProtoListeners(eventType) {\n        let listeners = this._cache.get(ALL_LISTENERS);\n        if (!listeners) {\n            listeners = {};\n            let obj = Object.getPrototypeOf(this);\n            while (obj) {\n                if (!obj.eventListeners) {\n                    obj = Object.getPrototypeOf(obj);\n                    continue;\n                }\n                for (var event in obj.eventListeners) {\n                    const newEvents = obj.eventListeners[event];\n                    const oldEvents = listeners[event] || [];\n                    listeners[event] = newEvents.concat(oldEvents);\n                }\n                obj = Object.getPrototypeOf(obj);\n            }\n            this._cache.set(ALL_LISTENERS, listeners);\n        }\n        return listeners[eventType];\n    }\n    _fire(eventType, evt) {\n        evt = evt || {};\n        evt.currentTarget = this;\n        evt.type = eventType;\n        const topListeners = this._getProtoListeners(eventType);\n        if (topListeners) {\n            for (var i = 0; i < topListeners.length; i++) {\n                topListeners[i].handler.call(this, evt);\n            }\n        }\n        const selfListeners = this.eventListeners[eventType];\n        if (selfListeners) {\n            for (var i = 0; i < selfListeners.length; i++) {\n                selfListeners[i].handler.call(this, evt);\n            }\n        }\n    }\n    draw() {\n        this.drawScene();\n        this.drawHit();\n        return this;\n    }\n    _createDragElement(evt) {\n        var pointerId = evt ? evt.pointerId : undefined;\n        var stage = this.getStage();\n        var ap = this.getAbsolutePosition();\n        var pos = stage._getPointerById(pointerId) ||\n            stage._changedPointerPositions[0] ||\n            ap;\n        DD._dragElements.set(this._id, {\n            node: this,\n            startPointerPos: pos,\n            offset: {\n                x: pos.x - ap.x,\n                y: pos.y - ap.y,\n            },\n            dragStatus: 'ready',\n            pointerId,\n        });\n    }\n    startDrag(evt, bubbleEvent = true) {\n        if (!DD._dragElements.has(this._id)) {\n            this._createDragElement(evt);\n        }\n        const elem = DD._dragElements.get(this._id);\n        elem.dragStatus = 'dragging';\n        this.fire('dragstart', {\n            type: 'dragstart',\n            target: this,\n            evt: evt && evt.evt,\n        }, bubbleEvent);\n    }\n    _setDragPosition(evt, elem) {\n        const pos = this.getStage()._getPointerById(elem.pointerId);\n        if (!pos) {\n            return;\n        }\n        var newNodePos = {\n            x: pos.x - elem.offset.x,\n            y: pos.y - elem.offset.y,\n        };\n        var dbf = this.dragBoundFunc();\n        if (dbf !== undefined) {\n            const bounded = dbf.call(this, newNodePos, evt);\n            if (!bounded) {\n                Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\n            }\n            else {\n                newNodePos = bounded;\n            }\n        }\n        if (!this._lastPos ||\n            this._lastPos.x !== newNodePos.x ||\n            this._lastPos.y !== newNodePos.y) {\n            this.setAbsolutePosition(newNodePos);\n            this._requestDraw();\n        }\n        this._lastPos = newNodePos;\n    }\n    stopDrag(evt) {\n        const elem = DD._dragElements.get(this._id);\n        if (elem) {\n            elem.dragStatus = 'stopped';\n        }\n        DD._endDragBefore(evt);\n        DD._endDragAfter(evt);\n    }\n    setDraggable(draggable) {\n        this._setAttr('draggable', draggable);\n        this._dragChange();\n    }\n    isDragging() {\n        const elem = DD._dragElements.get(this._id);\n        return elem ? elem.dragStatus === 'dragging' : false;\n    }\n    _listenDrag() {\n        this._dragCleanup();\n        this.on('mousedown.konva touchstart.konva', function (evt) {\n            var shouldCheckButton = evt.evt['button'] !== undefined;\n            var canDrag = !shouldCheckButton || Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\n            if (!canDrag) {\n                return;\n            }\n            if (this.isDragging()) {\n                return;\n            }\n            var hasDraggingChild = false;\n            DD._dragElements.forEach((elem) => {\n                if (this.isAncestorOf(elem.node)) {\n                    hasDraggingChild = true;\n                }\n            });\n            if (!hasDraggingChild) {\n                this._createDragElement(evt);\n            }\n        });\n    }\n    _dragChange() {\n        if (this.attrs.draggable) {\n            this._listenDrag();\n        }\n        else {\n            this._dragCleanup();\n            var stage = this.getStage();\n            if (!stage) {\n                return;\n            }\n            const dragElement = DD._dragElements.get(this._id);\n            const isDragging = dragElement && dragElement.dragStatus === 'dragging';\n            const isReady = dragElement && dragElement.dragStatus === 'ready';\n            if (isDragging) {\n                this.stopDrag();\n            }\n            else if (isReady) {\n                DD._dragElements.delete(this._id);\n            }\n        }\n    }\n    _dragCleanup() {\n        this.off('mousedown.konva');\n        this.off('touchstart.konva');\n    }\n    isClientRectOnScreen(margin = { x: 0, y: 0 }) {\n        const stage = this.getStage();\n        if (!stage) {\n            return false;\n        }\n        const screenRect = {\n            x: -margin.x,\n            y: -margin.y,\n            width: stage.width() + margin.x,\n            height: stage.height() + margin.y,\n        };\n        return Util.haveIntersection(screenRect, this.getClientRect());\n    }\n    static create(data, container) {\n        if (Util._isString(data)) {\n            data = JSON.parse(data);\n        }\n        return this._createNode(data, container);\n    }\n    static _createNode(obj, container) {\n        var className = Node.prototype.getClassName.call(obj), children = obj.children, no, len, n;\n        if (container) {\n            obj.attrs.container = container;\n        }\n        if (!Konva[className]) {\n            Util.warn('Can not find a node with class name \"' +\n                className +\n                '\". Fallback to \"Shape\".');\n            className = 'Shape';\n        }\n        const Class = Konva[className];\n        no = new Class(obj.attrs);\n        if (children) {\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                no.add(Node._createNode(children[n]));\n            }\n        }\n        return no;\n    }\n}\nNode.prototype.nodeType = 'Node';\nNode.prototype._attrsAffectingSize = [];\nNode.prototype.eventListeners = {};\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\n    if (this._batchingTransformChange) {\n        this._needClearTransformCache = true;\n        return;\n    }\n    this._clearCache(TRANSFORM);\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n});\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\n    this._clearSelfAndDescendantCache(VISIBLE);\n});\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\n    this._clearSelfAndDescendantCache(LISTENING);\n});\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n});\nconst addGetterSetter = Factory.addGetterSetter;\naddGetterSetter(Node, 'zIndex');\naddGetterSetter(Node, 'absolutePosition');\naddGetterSetter(Node, 'position');\naddGetterSetter(Node, 'x', 0, getNumberValidator());\naddGetterSetter(Node, 'y', 0, getNumberValidator());\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', getStringValidator());\naddGetterSetter(Node, 'opacity', 1, getNumberValidator());\naddGetterSetter(Node, 'name', '', getStringValidator());\naddGetterSetter(Node, 'id', '', getStringValidator());\naddGetterSetter(Node, 'rotation', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\naddGetterSetter(Node, 'scaleX', 1, getNumberValidator());\naddGetterSetter(Node, 'scaleY', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\naddGetterSetter(Node, 'skewX', 0, getNumberValidator());\naddGetterSetter(Node, 'skewY', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\naddGetterSetter(Node, 'offsetX', 0, getNumberValidator());\naddGetterSetter(Node, 'offsetY', 0, getNumberValidator());\naddGetterSetter(Node, 'dragDistance', null, getNumberValidator());\naddGetterSetter(Node, 'width', 0, getNumberValidator());\naddGetterSetter(Node, 'height', 0, getNumberValidator());\naddGetterSetter(Node, 'listening', true, getBooleanValidator());\naddGetterSetter(Node, 'preventDefault', true, getBooleanValidator());\naddGetterSetter(Node, 'filters', null, function (val) {\n    this._filterUpToDate = false;\n    return val;\n});\naddGetterSetter(Node, 'visible', true, getBooleanValidator());\naddGetterSetter(Node, 'transformsEnabled', 'all', getStringValidator());\naddGetterSetter(Node, 'size');\naddGetterSetter(Node, 'dragBoundFunc');\naddGetterSetter(Node, 'draggable', false, getBooleanValidator());\nFactory.backCompat(Node, {\n    rotateDeg: 'rotate',\n    setRotationDeg: 'setRotation',\n    getRotationDeg: 'getRotation',\n});\n"]},"metadata":{},"sourceType":"module"}